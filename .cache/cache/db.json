{"keys":[{"id":"transformer-remark-markdown-ast-ce80011d0010768a0d3d92a4e5b820a6-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":{"type":"root","children":[{"type":"yaml","value":"title: 实习生培训--Dva框架数据调用\nsubTitle: 公司用Dva框架进行前端开发，Dva是基于redux,redux-saga和react-router的框架，简单容易上手。\ndate: \"2017-12-16\"\npath: \"/peixun-dva/\"\ncover: dva2.png","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":7,"column":4,"offset":159},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"dva框架之数据调用","position":{"start":{"line":8,"column":4,"offset":163},"end":{"line":8,"column":14,"offset":173},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":160},"end":{"line":8,"column":14,"offset":173},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"route","position":{"start":{"line":10,"column":5,"offset":179},"end":{"line":10,"column":10,"offset":184},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":175},"end":{"line":10,"column":10,"offset":184},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"route负责页面渲染和数据展示","position":{"start":{"line":11,"column":1,"offset":185},"end":{"line":11,"column":17,"offset":201},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":185},"end":{"line":11,"column":17,"offset":201},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//基础模板</span>\n<span class=\"token comment\">// routes/admin/index.js</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> connect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'dva'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Index</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span> hello world <span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":12,"column":1,"offset":202},"end":{"line":27,"column":4,"offset":444},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"router.js负责全部路由的管理","position":{"start":{"line":28,"column":1,"offset":445},"end":{"line":28,"column":19,"offset":463},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":445},"end":{"line":28,"column":19,"offset":463},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//引入</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Router<span class=\"token punctuation\">,</span> Route<span class=\"token punctuation\">,</span> Switch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'dva/router'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> IndexPage <span class=\"token keyword\">from</span> <span class=\"token string\">'./routes/IndexPage'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Index <span class=\"token keyword\">from</span> <span class=\"token string\">'./routes/admin/Index'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">RouterConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> history <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Router history<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> exact component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>IndexPage<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/admin\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Index<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> RouterConfig<span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":29,"column":1,"offset":464},"end":{"line":47,"column":4,"offset":909},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"antd是一款ui框架，想象成bootstrap,它将常用的东西封装成组件提供使用","position":{"start":{"line":48,"column":1,"offset":910},"end":{"line":48,"column":42,"offset":951},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":910},"end":{"line":48,"column":42,"offset":951},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//布局</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Layout<span class=\"token punctuation\">,</span> Menu<span class=\"token punctuation\">,</span> Icon <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'antd'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Header<span class=\"token punctuation\">,</span> Sider<span class=\"token punctuation\">,</span> Content <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Layout<span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":49,"column":1,"offset":952},"end":{"line":53,"column":4,"offset":1052},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"路由嵌套","position":{"start":{"line":55,"column":1,"offset":1054},"end":{"line":55,"column":5,"offset":1058},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1054},"end":{"line":55,"column":5,"offset":1058},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"react-route v4 规定路由不允许嵌套","position":{"start":{"line":57,"column":1,"offset":1060},"end":{"line":57,"column":25,"offset":1084},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1060},"end":{"line":57,"column":25,"offset":1084},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// V2 or V3 路由组件嵌套</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Router<span class=\"token punctuation\">,</span> Route<span class=\"token punctuation\">,</span> hashHistory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span>Router history<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>hashHistory<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'/'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>App<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'foo'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Foo<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'bar'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Bar<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n<span class=\"token comment\">// V4 Router 的路由组件嵌套</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    HashRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span>\n    Route<span class=\"token punctuation\">,</span>\n    Switch\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>App <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'/foo'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Foo<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'/bar'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Bar<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>App<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n</code></pre>\n      </div>","position":{"start":{"line":58,"column":1,"offset":1085},"end":{"line":85,"column":4,"offset":1670},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"hashHistory","position":{"start":{"line":86,"column":1,"offset":1671},"end":{"line":86,"column":12,"offset":1682},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":1671},"end":{"line":86,"column":12,"offset":1682},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// 以前</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>hashHistory<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> history <span class=\"token operator\">=</span> hashHistory<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// now</span>\n<span class=\"token keyword\">import</span> createHashHistory <span class=\"token keyword\">from</span> <span class=\"token string\">'history/createBrowserHistory'</span>\n<span class=\"token keyword\">const</span> history <span class=\"token operator\">=</span> <span class=\"token function\">createHashHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//dva中修改history</span>\n<span class=\"token keyword\">import</span> browserHistory <span class=\"token keyword\">from</span> <span class=\"token string\">'history/createBrowserHistory'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 1. Initialize</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">dva</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  history<span class=\"token punctuation\">:</span> <span class=\"token function\">browserHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":87,"column":1,"offset":1683},"end":{"line":101,"column":4,"offset":2017},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"service","position":{"start":{"line":103,"column":5,"offset":2023},"end":{"line":103,"column":12,"offset":2030},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2019},"end":{"line":103,"column":12,"offset":2030},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"service负责的是数据的请求","position":{"start":{"line":104,"column":1,"offset":2031},"end":{"line":104,"column":17,"offset":2047},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2031},"end":{"line":104,"column":17,"offset":2047},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"request函数是一个封装的fetch函数","position":{"start":{"line":106,"column":1,"offset":2049},"end":{"line":106,"column":23,"offset":2071},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":2049},"end":{"line":106,"column":23,"offset":2071},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getrandom</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/article/random?dev=1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getoneday</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`/article/day?dev=1&amp;date=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>param<span class=\"token punctuation\">.</span>date<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":107,"column":1,"offset":2072},"end":{"line":115,"column":4,"offset":2270},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"model","position":{"start":{"line":117,"column":5,"offset":2276},"end":{"line":117,"column":10,"offset":2281},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":2272},"end":{"line":117,"column":10,"offset":2281},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"model层负责的是数据的处理","position":{"start":{"line":118,"column":1,"offset":2282},"end":{"line":118,"column":16,"offset":2297},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":2282},"end":{"line":118,"column":16,"offset":2297},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"call是请求接口，put是进行数据存取","position":{"start":{"line":120,"column":1,"offset":2299},"end":{"line":120,"column":21,"offset":2319},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":2299},"end":{"line":120,"column":21,"offset":2319},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token operator\">*</span><span class=\"token function\">getRandom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> payload <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> call<span class=\"token punctuation\">,</span> put <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">.</span>getrandom<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">yield</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">'save'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> random<span class=\"token punctuation\">:</span> data <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n       message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'random error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre>\n      </div>","position":{"start":{"line":121,"column":1,"offset":2320},"end":{"line":134,"column":4,"offset":2637},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"proxy配置","position":{"start":{"line":135,"column":5,"offset":2642},"end":{"line":135,"column":12,"offset":2649},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":2638},"end":{"line":135,"column":12,"offset":2649},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"进行代理请求\n","position":{"start":{"line":136,"column":1,"offset":2650},"end":{"line":137,"column":1,"offset":2657},"indent":[1]}},{"type":"link","title":null,"url":"https://interface.meiriyiwen.com/article/day?dev=1","children":[{"type":"text","value":"https://interface.meiriyiwen.com/article/day?dev=1","position":{"start":{"line":137,"column":1,"offset":2657},"end":{"line":137,"column":51,"offset":2707},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":2657},"end":{"line":137,"column":51,"offset":2707},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":2650},"end":{"line":137,"column":51,"offset":2707},"indent":[1]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token string\">\"proxy\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"/article\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"target\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://interface.meiriyiwen.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"changeOrigin\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre>\n      </div>","position":{"start":{"line":138,"column":1,"offset":2708},"end":{"line":145,"column":4,"offset":2842},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"可能遇到的问题","position":{"start":{"line":146,"column":5,"offset":2847},"end":{"line":146,"column":12,"offset":2854},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":2843},"end":{"line":146,"column":12,"offset":2854},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"嵌套路由刷新不生效","position":{"start":{"line":147,"column":3,"offset":2857},"end":{"line":147,"column":12,"offset":2866},"indent":[]}}],"position":{"start":{"line":147,"column":3,"offset":2857},"end":{"line":147,"column":12,"offset":2866},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// public/index.html</span>\n<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"index.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token comment\">// 改成</span>\n<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"/index.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n</code></pre>\n      </div>","position":{"start":{"line":148,"column":1,"offset":2867},"end":{"line":153,"column":4,"offset":2970},"indent":[1,1,1,1,1]}}],"position":{"start":{"line":147,"column":1,"offset":2855},"end":{"line":153,"column":4,"offset":2970},"indent":[1,1,1,1,1,1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"JSON格式出错，尽量不要复制，手打一遍","position":{"start":{"line":154,"column":3,"offset":2973},"end":{"line":154,"column":23,"offset":2993},"indent":[]}}],"position":{"start":{"line":154,"column":3,"offset":2973},"end":{"line":154,"column":23,"offset":2993},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":2971},"end":{"line":154,"column":23,"offset":2993},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"数据获取不到（多看请求）","position":{"start":{"line":155,"column":3,"offset":2996},"end":{"line":155,"column":15,"offset":3008},"indent":[]}}],"position":{"start":{"line":155,"column":3,"offset":2996},"end":{"line":155,"column":15,"offset":3008},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// 对象析构，因为这里获取的数据是{data:{..,..,..}},所以才是const { data }将其析构出来，不要被误导全都是用{ data }析构 </span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">.</span>getArticle<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":156,"column":1,"offset":3009},"end":{"line":159,"column":4,"offset":3157},"indent":[1,1,1]}}],"position":{"start":{"line":155,"column":1,"offset":2994},"end":{"line":159,"column":4,"offset":3157},"indent":[1,1,1,1]}}],"position":{"start":{"line":147,"column":1,"offset":2855},"end":{"line":159,"column":4,"offset":3157},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":159,"column":4,"offset":3157}}}},{"id":"transformer-remark-markdown-ast-2e666b594624deb1d8071917888116a7-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":{"type":"root","children":[{"type":"yaml","value":"title: 实习生培训--ES6相关知识\nsubTitle: 给公司刚来的实习生做培训，留下资料备份，后续补充。\ndate: \"2017-12-09\"\npath: \"/peixun-es6/\"\ncover: dva.jpg","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":7,"column":4,"offset":120},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Dva中的ES6知识点","position":{"start":{"line":9,"column":4,"offset":125},"end":{"line":9,"column":15,"offset":136},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":122},"end":{"line":9,"column":15,"offset":136},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"const 与 let","position":{"start":{"line":11,"column":5,"offset":142},"end":{"line":11,"column":16,"offset":153},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":138},"end":{"line":11,"column":16,"offset":153},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"目的：创建块级作用域，let声明变量，const声明常量","position":{"start":{"line":13,"column":1,"offset":155},"end":{"line":13,"column":29,"offset":183},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":155},"end":{"line":13,"column":29,"offset":183},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let与var用法类似，但是let声明的变量只在所处的代码块中有效","position":{"start":{"line":15,"column":1,"offset":185},"end":{"line":15,"column":34,"offset":218},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":185},"end":{"line":15,"column":34,"offset":218},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">//报错</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span>\n</code></pre>\n      </div>","position":{"start":{"line":16,"column":1,"offset":219},"end":{"line":23,"column":4,"offset":302},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"再看一道经典面试题，下面代码会输出什么？","position":{"start":{"line":24,"column":1,"offset":303},"end":{"line":24,"column":21,"offset":323},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":303},"end":{"line":24,"column":21,"offset":323},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span><span class=\"token number\">1000</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":25,"column":1,"offset":324},"end":{"line":31,"column":4,"offset":438},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"for循环并不会生成一个作用域，每次循环是跟随变量所在的作用域，而var声明的是全局变量，因此for每次循环中访问的i都是全局中同一个i变量","position":{"start":{"line":32,"column":1,"offset":439},"end":{"line":32,"column":71,"offset":509},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":439},"end":{"line":32,"column":71,"offset":509},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"闭包解决方案","position":{"start":{"line":34,"column":1,"offset":511},"end":{"line":34,"column":7,"offset":517},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":511},"end":{"line":34,"column":7,"offset":517},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span><span class=\"token number\">1000</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":35,"column":1,"offset":518},"end":{"line":43,"column":4,"offset":673},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"let解决方案","position":{"start":{"line":45,"column":1,"offset":675},"end":{"line":45,"column":8,"offset":682},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":675},"end":{"line":45,"column":8,"offset":682},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span><span class=\"token number\">1000</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":46,"column":1,"offset":683},"end":{"line":52,"column":4,"offset":797},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"使用let的时候，每次循环i都是let声明的一个新变量，每次循环都会有类似代码块包起来执行，本质上达到了立即执行函数的作用","position":{"start":{"line":53,"column":1,"offset":798},"end":{"line":53,"column":62,"offset":859},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":798},"end":{"line":53,"column":62,"offset":859},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"const声明的变量，需要赋值且不可以修改，不可以重复声明。","position":{"start":{"line":55,"column":1,"offset":861},"end":{"line":55,"column":31,"offset":891},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":861},"end":{"line":55,"column":31,"offset":891},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    b<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nobj<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":56,"column":1,"offset":892},"end":{"line":63,"column":4,"offset":964},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"const所谓的不可以修改值，指的是改变量的地址不会被修改。简单数据类型的值指向的就是地址，而对于对象和数组，只能保证他的内存地址指针不变。","position":{"start":{"line":64,"column":1,"offset":965},"end":{"line":64,"column":71,"offset":1035},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":965},"end":{"line":64,"column":71,"offset":1035},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"模板字符串","position":{"start":{"line":66,"column":5,"offset":1041},"end":{"line":66,"column":10,"offset":1046},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1037},"end":{"line":66,"column":10,"offset":1046},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"目的：方便拼接字符串","position":{"start":{"line":67,"column":1,"offset":1047},"end":{"line":67,"column":11,"offset":1057},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1047},"end":{"line":67,"column":11,"offset":1057},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token string\">'wrold'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`hello,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>world<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":68,"column":1,"offset":1058},"end":{"line":71,"column":4,"offset":1118},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"箭头函数","position":{"start":{"line":73,"column":5,"offset":1124},"end":{"line":73,"column":9,"offset":1128},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1120},"end":{"line":73,"column":9,"offset":1128},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"目的：简化匿名函数，让this指向固定化。","position":{"start":{"line":74,"column":1,"offset":1129},"end":{"line":74,"column":22,"offset":1150},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1129},"end":{"line":74,"column":22,"offset":1150},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> v<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 等同于</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> v<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 等同于</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> v <span class=\"token operator\">=></span> v<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n</code></pre>\n      </div>","position":{"start":{"line":75,"column":1,"offset":1151},"end":{"line":85,"column":4,"offset":1270},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"箭头函数本身没有this,箭头函数中的this绑定在定义时所在的作用域而是引用外层的this","position":{"start":{"line":86,"column":1,"offset":1271},"end":{"line":86,"column":47,"offset":1317},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":1271},"end":{"line":86,"column":47,"offset":1317},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    f<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    f<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":87,"column":1,"offset":1318},"end":{"line":103,"column":4,"offset":1496},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"对象解构","position":{"start":{"line":105,"column":5,"offset":1502},"end":{"line":105,"column":9,"offset":1506},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":1498},"end":{"line":105,"column":9,"offset":1506},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> age <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> user<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n</code></pre>\n      </div>","position":{"start":{"line":106,"column":1,"offset":1507},"end":{"line":110,"column":4,"offset":1616},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"可以析构传入的函数参数","position":{"start":{"line":111,"column":1,"offset":1617},"end":{"line":111,"column":12,"offset":1628},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":1617},"end":{"line":111,"column":12,"offset":1628},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token punctuation\">:</span> <span class=\"token string\">'22'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":112,"column":1,"offset":1629},"end":{"line":121,"column":4,"offset":1753},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"反向解构","position":{"start":{"line":122,"column":1,"offset":1754},"end":{"line":122,"column":5,"offset":1758},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":1754},"end":{"line":122,"column":5,"offset":1758},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> age <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> age <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// { name: 'xxx', age: 8 }</span>\n</code></pre>\n      </div>","position":{"start":{"line":123,"column":1,"offset":1759},"end":{"line":127,"column":4,"offset":1859},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"spread operator","position":{"start":{"line":129,"column":5,"offset":1865},"end":{"line":129,"column":20,"offset":1880},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":1861},"end":{"line":129,"column":20,"offset":1880},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Spread Operator 即 3 个点 …","position":{"start":{"line":130,"column":1,"offset":1881},"end":{"line":130,"column":27,"offset":1907},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":1881},"end":{"line":130,"column":27,"offset":1907},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"几个用法","position":{"start":{"line":132,"column":1,"offset":1909},"end":{"line":132,"column":5,"offset":1913},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":1909},"end":{"line":132,"column":5,"offset":1913},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//组装函数或者对象</span>\n<span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arr<span class=\"token punctuation\">]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">:</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">:</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">...</span>obj<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":133,"column":1,"offset":1914},"end":{"line":141,"column":4,"offset":2081},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"promise","position":{"start":{"line":143,"column":5,"offset":2087},"end":{"line":143,"column":12,"offset":2094},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":2083},"end":{"line":143,"column":12,"offset":2094},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"用途：优雅处理异步请求","position":{"start":{"line":144,"column":1,"offset":2095},"end":{"line":144,"column":12,"offset":2106},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":2095},"end":{"line":144,"column":12,"offset":2106},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> promise <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ... some code</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token comment\">/* 异步操作成功 */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npromise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// success</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// failure</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":145,"column":1,"offset":2107},"end":{"line":159,"column":4,"offset":2352},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"generators","position":{"start":{"line":160,"column":5,"offset":2357},"end":{"line":160,"column":15,"offset":2367},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":2353},"end":{"line":160,"column":15,"offset":2367},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"用途：异步编程解决方案，用同步写异步","position":{"start":{"line":161,"column":1,"offset":2368},"end":{"line":161,"column":19,"offset":2386},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":2368},"end":{"line":161,"column":19,"offset":2386},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//fetch</span>\n<span class=\"token function-variable function\">getJson</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>data <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> err <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">getJson</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/xxxxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//generator</span>\n<span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/xxxxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Oops, error: '</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":162,"column":1,"offset":2387},"end":{"line":184,"column":4,"offset":2805},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"//例子：依次读取两个文件\n//回调函数","position":{"start":{"line":185,"column":1,"offset":2806},"end":{"line":186,"column":7,"offset":2826},"indent":[1]}}],"position":{"start":{"line":185,"column":1,"offset":2806},"end":{"line":186,"column":7,"offset":2826},"indent":[1]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fileA<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//.....</span>\n  fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fileB<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//......</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// promies</span>\n<span class=\"token keyword\">var</span> readFile <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs-readfile-promise'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fileA<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fileB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// generators</span>\n<span class=\"token function-variable function\">getData</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>data <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">readfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> data1 <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>fileA<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//...</span>\n    <span class=\"token keyword\">let</span> data2 <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>fileB<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//.....</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":187,"column":1,"offset":2827},"end":{"line":221,"column":4,"offset":3504},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Set","position":{"start":{"line":222,"column":5,"offset":3509},"end":{"line":222,"column":8,"offset":3512},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":3505},"end":{"line":222,"column":8,"offset":3512},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// 去重</span>\n<span class=\"token comment\">//对象自带去重</span>\n<span class=\"token comment\">//数组去重</span>\narr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            arr2<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//es6去重</span>\narr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\narr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> arr2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arr2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":223,"column":1,"offset":3513},"end":{"line":243,"column":4,"offset":3878},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":243,"column":4,"offset":3878}}}},{"id":"transformer-remark-markdown-ast-596c91d811ec000e05b39d01a9155944-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":{"type":"root","children":[{"type":"yaml","value":"title: Express编写restful风格api\nsubTitle: 成为全栈工程师的第一步，给你自己写个接口吧。\ndate: \"2017-12-02\"\npath: \"/express-api/\"\ncover: express.jpg","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":7,"column":4,"offset":129},"indent":[1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"前后端分离的大背景，学习node构建为前端提供json格式的数据，遵循restful api的设计风格，有利于前端工程师的进一步深入，向全栈工程师又迈出一小步。","position":{"start":{"line":9,"column":3,"offset":133},"end":{"line":9,"column":83,"offset":213},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":133},"end":{"line":9,"column":83,"offset":213},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":131},"end":{"line":9,"column":83,"offset":213},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"环境","position":{"start":{"line":11,"column":5,"offset":219},"end":{"line":11,"column":7,"offset":221},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":215},"end":{"line":11,"column":7,"offset":221},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Node.js","position":{"start":{"line":12,"column":3,"offset":224},"end":{"line":12,"column":10,"offset":231},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":224},"end":{"line":12,"column":10,"offset":231},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":222},"end":{"line":12,"column":10,"offset":231},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"MongoDB","position":{"start":{"line":13,"column":3,"offset":234},"end":{"line":13,"column":10,"offset":241},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":234},"end":{"line":13,"column":10,"offset":241},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":232},"end":{"line":13,"column":10,"offset":241},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":222},"end":{"line":13,"column":10,"offset":241},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"环境安装我就不细讲了，搜索引擎都有，Window配置MongoDB是有点烦的，开发还是尽量来台mac吧.","position":{"start":{"line":15,"column":1,"offset":243},"end":{"line":15,"column":53,"offset":295},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":243},"end":{"line":15,"column":53,"offset":295},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"文件目录","position":{"start":{"line":17,"column":5,"offset":301},"end":{"line":17,"column":9,"offset":305},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":297},"end":{"line":17,"column":9,"offset":305},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-none\"><code>-app  \n  -models //数据库相关\n     -bear.js\n-package.json //依赖文件\n-server.js //node服务</code></pre>\n      </div>","position":{"start":{"line":18,"column":1,"offset":306},"end":{"line":24,"column":4,"offset":393},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"步骤是npm init后会生成package.json,然后安装相关依赖","position":{"start":{"line":26,"column":1,"offset":395},"end":{"line":26,"column":37,"offset":431},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":395},"end":{"line":26,"column":37,"offset":431},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code>  <span class=\"token string\">\"dependencies\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"body-parser\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^1.18.2\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"express\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^4.16.2\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"mongoose\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^4.13.5\"</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":27,"column":1,"offset":432},"end":{"line":33,"column":4,"offset":547},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"启动一个node服务","position":{"start":{"line":34,"column":5,"offset":552},"end":{"line":34,"column":15,"offset":562},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":548},"end":{"line":34,"column":15,"offset":562},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token comment\">// express为node的框架，虽然现在koa好像比较流行，但是还值得入门学一下。</span>\n<span class=\"token comment\">// body-parser可以理解为解析数据的工具</span>\n<span class=\"token comment\">// app.use(path,callback),为指定路径添加中间件，如果没有path,则默认'/'，</span>\n<span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bodyParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body-parser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>PORT <span class=\"token operator\">||</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> router <span class=\"token operator\">=</span> express<span class=\"token punctuation\">.</span><span class=\"token function\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'something is get!!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    message<span class=\"token punctuation\">:</span> <span class=\"token string\">'hello, world!'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api'</span><span class=\"token punctuation\">,</span> router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'magic is coming'</span> <span class=\"token operator\">+</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":35,"column":1,"offset":563},"end":{"line":60,"column":4,"offset":1161},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"数据库服务","position":{"start":{"line":61,"column":5,"offset":1166},"end":{"line":61,"column":10,"offset":1171},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1162},"end":{"line":61,"column":10,"offset":1171},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"bear.js","position":{"start":{"line":62,"column":1,"offset":1172},"end":{"line":62,"column":8,"offset":1179},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1172},"end":{"line":62,"column":8,"offset":1179},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token comment\">// new Schema生成一张表，</span>\n<span class=\"token comment\">// mongoose.model(name,Schema)给表命名</span>\n<span class=\"token keyword\">var</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> Schema <span class=\"token operator\">=</span> mongoose<span class=\"token punctuation\">.</span>Schema<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> BearSchema <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Schema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> mongoose<span class=\"token punctuation\">.</span><span class=\"token function\">model</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bear'</span><span class=\"token punctuation\">,</span> BearSchema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":63,"column":1,"offset":1180},"end":{"line":73,"column":4,"offset":1421},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"api编写","position":{"start":{"line":74,"column":5,"offset":1426},"end":{"line":74,"column":10,"offset":1431},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1422},"end":{"line":74,"column":10,"offset":1431},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"server.js","position":{"start":{"line":75,"column":1,"offset":1432},"end":{"line":75,"column":10,"offset":1441},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1432},"end":{"line":75,"column":10,"offset":1441},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">// 引入mongo</span>\n<span class=\"token keyword\">var</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmongoose<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb://localhost/node_api'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> Bear <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./app/models/bear'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">//post请求获取数据 req.body.name</span>\n<span class=\"token comment\">//get请求获取数据 req.params.name.</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bears'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> bear <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Bear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        message<span class=\"token punctuation\">:</span> <span class=\"token string\">'bear is created!!!'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    Bear<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span>bears<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>bears<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":76,"column":1,"offset":1442},"end":{"line":108,"column":4,"offset":2088},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"相关完整代码","position":{"start":{"line":109,"column":5,"offset":2093},"end":{"line":109,"column":11,"offset":2099},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":2089},"end":{"line":109,"column":11,"offset":2099},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"server.js","position":{"start":{"line":110,"column":1,"offset":2100},"end":{"line":110,"column":10,"offset":2109},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":2100},"end":{"line":110,"column":10,"offset":2109},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bodyParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body-parser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmongoose<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb://localhost/node_api'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> Bear <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./app/models/bear'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>PORT <span class=\"token operator\">||</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> router <span class=\"token operator\">=</span> express<span class=\"token punctuation\">.</span><span class=\"token function\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// middleware</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">,</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'something is happen!!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bears'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> bear <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Bear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        message<span class=\"token punctuation\">:</span> <span class=\"token string\">'bear is created!!!'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    Bear<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span>bears<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>bears<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bears/:bear_id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  Bear<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>bear_id<span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  Bear<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>bear_id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    bear<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        message<span class=\"token punctuation\">:</span> <span class=\"token string\">'Bear is update success!!!'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  Bear<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    _id<span class=\"token punctuation\">:</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>bear_id\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      message<span class=\"token punctuation\">:</span> <span class=\"token string\">'delete is success!!!'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'something is get!!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    message<span class=\"token punctuation\">:</span> <span class=\"token string\">'hello, world!'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api'</span><span class=\"token punctuation\">,</span> router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'magic is coming'</span> <span class=\"token operator\">+</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":111,"column":1,"offset":2110},"end":{"line":205,"column":4,"offset":3930},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"总结：师傅领进门，修行看个人，看上去好像挺简单，但是也需要自己手打出来理解还深一点，特别上刚入门的同学，实践出真知啊。","position":{"start":{"line":207,"column":1,"offset":3932},"end":{"line":207,"column":60,"offset":3991},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":3932},"end":{"line":207,"column":60,"offset":3991},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":207,"column":60,"offset":3991}}}},{"id":"transformer-remark-markdown-ast-64ffbea6144986c0dc8b9780e7193fc8-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":{"type":"root","children":[{"type":"yaml","value":"title: JS基础查缺补漏--异步与单线程\nsubTitle: 掌握了解js运行机制，才能更加方便你去理解和编写代码。\ndate: \"2017-11-25\"\npath: \"/know-js-3/\"\ncover: knowjs.png","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":7,"column":4,"offset":126},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"异步与单线程","position":{"start":{"line":9,"column":4,"offset":131},"end":{"line":9,"column":10,"offset":137},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":128},"end":{"line":9,"column":10,"offset":137},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"几个问题","position":{"start":{"line":10,"column":1,"offset":138},"end":{"line":10,"column":5,"offset":142},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":138},"end":{"line":10,"column":5,"offset":142},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"同步和异步的区别","position":{"start":{"line":11,"column":3,"offset":145},"end":{"line":11,"column":11,"offset":153},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":145},"end":{"line":11,"column":11,"offset":153},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":143},"end":{"line":11,"column":11,"offset":153},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"使用异步的场景","position":{"start":{"line":12,"column":3,"offset":156},"end":{"line":12,"column":10,"offset":163},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":156},"end":{"line":12,"column":10,"offset":163},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":154},"end":{"line":12,"column":10,"offset":163},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"获取2017-11-11的格式日期","position":{"start":{"line":13,"column":3,"offset":166},"end":{"line":13,"column":20,"offset":183},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":166},"end":{"line":13,"column":20,"offset":183},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":164},"end":{"line":13,"column":20,"offset":183},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"获取随机数，要求是长度一致的字符串格式","position":{"start":{"line":14,"column":3,"offset":186},"end":{"line":14,"column":22,"offset":205},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":186},"end":{"line":14,"column":22,"offset":205},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":184},"end":{"line":14,"column":22,"offset":205},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"写一个能遍历对象和数组的通用foreach函数","position":{"start":{"line":15,"column":3,"offset":208},"end":{"line":15,"column":26,"offset":231},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":208},"end":{"line":15,"column":26,"offset":231},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"异步","position":{"start":{"line":16,"column":5,"offset":236},"end":{"line":16,"column":7,"offset":238},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":232},"end":{"line":16,"column":7,"offset":238},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":206},"end":{"line":16,"column":7,"offset":238},"indent":[1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"由于js是单线程,所以需要异步，比如Ajax,好处就是节约时间，不会阻塞","position":{"start":{"line":17,"column":3,"offset":241},"end":{"line":17,"column":39,"offset":277},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":241},"end":{"line":17,"column":39,"offset":277},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"获取日期格式","position":{"start":{"line":18,"column":5,"offset":282},"end":{"line":18,"column":11,"offset":288},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":278},"end":{"line":18,"column":11,"offset":288},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">formateDate</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> year <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> month <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">var</span> day <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>month <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    month <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> month\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>day <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    day <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> date\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">return</span> year <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span> month <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> day\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> Date <span class=\"token operator\">=</span> <span class=\"token function\">formateDate</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":19,"column":1,"offset":289},"end":{"line":38,"column":4,"offset":689},"indent":[1,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"长度一致的字符串格式","position":{"start":{"line":39,"column":5,"offset":694},"end":{"line":39,"column":15,"offset":704},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":690},"end":{"line":39,"column":15,"offset":704},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">var</span> random <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> random <span class=\"token operator\">=</span> random <span class=\"token operator\">+</span> <span class=\"token string\">'0000000000'</span>\n<span class=\"token keyword\">var</span> random <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":40,"column":1,"offset":705},"end":{"line":45,"column":4,"offset":828},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"foreach函数","position":{"start":{"line":46,"column":5,"offset":833},"end":{"line":46,"column":14,"offset":842},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":829},"end":{"line":46,"column":14,"offset":842},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> key\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>obj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    obj<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":47,"column":1,"offset":843},"end":{"line":60,"column":4,"offset":1095},"indent":[1,5,5,5,5,5,5,5,5,5,5,1,1]}}],"position":{"start":{"line":17,"column":1,"offset":239},"end":{"line":60,"column":4,"offset":1095},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":11,"column":1,"offset":143},"end":{"line":60,"column":4,"offset":1095},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":60,"column":4,"offset":1095}}}},{"id":"transformer-remark-markdown-ast-118a167ba7f9a9986470ab52258a2fc5-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":{"type":"root","children":[{"type":"yaml","value":"title: JS基础查缺补漏--作用域与闭包\nsubTitle: 面试必考题，说明其必须掌握的重要性。\ndate: \"2017-11-18\"\npath: \"/know-js-2/\"\ncover: knowjs.png","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":7,"column":4,"offset":117},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"作用域与闭包","position":{"start":{"line":9,"column":4,"offset":122},"end":{"line":9,"column":10,"offset":128},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":119},"end":{"line":9,"column":10,"offset":128},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"先看几个问题：","position":{"start":{"line":10,"column":1,"offset":129},"end":{"line":10,"column":8,"offset":136},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":129},"end":{"line":10,"column":8,"offset":136},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"对变量提升的理解","position":{"start":{"line":11,"column":3,"offset":139},"end":{"line":11,"column":11,"offset":147},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":139},"end":{"line":11,"column":11,"offset":147},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":137},"end":{"line":11,"column":11,"offset":147},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"说明this几种不同的使用场景","position":{"start":{"line":12,"column":3,"offset":150},"end":{"line":12,"column":18,"offset":165},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":150},"end":{"line":12,"column":18,"offset":165},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":148},"end":{"line":12,"column":18,"offset":165},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"创建10个","position":{"start":{"line":13,"column":3,"offset":168},"end":{"line":13,"column":8,"offset":173},"indent":[]}},{"type":"html","value":"<a>","position":{"start":{"line":13,"column":8,"offset":173},"end":{"line":13,"column":11,"offset":176},"indent":[]}},{"type":"text","value":"标签，点击的时候弹出对应的序号","position":{"start":{"line":13,"column":11,"offset":176},"end":{"line":13,"column":26,"offset":191},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":168},"end":{"line":13,"column":26,"offset":191},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":166},"end":{"line":13,"column":26,"offset":191},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"如何理解作用域","position":{"start":{"line":14,"column":3,"offset":194},"end":{"line":14,"column":10,"offset":201},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":194},"end":{"line":14,"column":10,"offset":201},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":192},"end":{"line":14,"column":10,"offset":201},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"实际开发中闭包的作用","position":{"start":{"line":15,"column":3,"offset":204},"end":{"line":15,"column":13,"offset":214},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":204},"end":{"line":15,"column":13,"offset":214},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":202},"end":{"line":15,"column":13,"offset":214},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":137},"end":{"line":15,"column":13,"offset":214},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"知识点：","position":{"start":{"line":17,"column":1,"offset":216},"end":{"line":17,"column":5,"offset":220},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":216},"end":{"line":17,"column":5,"offset":220},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"执行上下文","position":{"start":{"line":18,"column":3,"offset":223},"end":{"line":18,"column":8,"offset":228},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":223},"end":{"line":18,"column":8,"offset":228},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":221},"end":{"line":18,"column":8,"offset":228},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"作用域","position":{"start":{"line":19,"column":3,"offset":231},"end":{"line":19,"column":6,"offset":234},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":231},"end":{"line":19,"column":6,"offset":234},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":229},"end":{"line":19,"column":6,"offset":234},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"作用域链","position":{"start":{"line":20,"column":3,"offset":237},"end":{"line":20,"column":7,"offset":241},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":237},"end":{"line":20,"column":7,"offset":241},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":235},"end":{"line":20,"column":7,"offset":241},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"闭包","position":{"start":{"line":21,"column":3,"offset":244},"end":{"line":21,"column":5,"offset":246},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":244},"end":{"line":21,"column":5,"offset":246},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":242},"end":{"line":21,"column":5,"offset":246},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"this","position":{"start":{"line":22,"column":3,"offset":249},"end":{"line":22,"column":7,"offset":253},"indent":[]}}],"position":{"start":{"line":22,"column":3,"offset":249},"end":{"line":22,"column":7,"offset":253},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":247},"end":{"line":22,"column":7,"offset":253},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":221},"end":{"line":22,"column":7,"offset":253},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"执行上下文","position":{"start":{"line":24,"column":5,"offset":259},"end":{"line":24,"column":10,"offset":264},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":255},"end":{"line":24,"column":10,"offset":264},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"首先知道js是单线程的，当一个函数调用时会创建一个执行上下文，然后推人函数调用栈，调用结束后会推出栈","position":{"start":{"line":25,"column":1,"offset":265},"end":{"line":25,"column":51,"offset":315},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":265},"end":{"line":25,"column":51,"offset":315},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">changeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> anotherColor <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> tempColor <span class=\"token operator\">=</span> anotherColor<span class=\"token punctuation\">;</span>\n        anotherColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n        color <span class=\"token operator\">=</span> tempColor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">swapColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">changeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":26,"column":1,"offset":316},"end":{"line":38,"column":4,"offset":564},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://user-images.githubusercontent.com/15880978/34150833-894ad738-e4e4-11e7-9455-e932f1680119.png","alt":"1","position":{"start":{"line":39,"column":1,"offset":565},"end":{"line":39,"column":107,"offset":671},"indent":[]}},{"type":"text","value":"\n当执行上下文创建的时候有两个生命周期\n","position":{"start":{"line":39,"column":107,"offset":671},"end":{"line":41,"column":1,"offset":691},"indent":[1,1]}},{"type":"image","title":null,"url":"https://user-images.githubusercontent.com/15880978/34150979-e9b9cb56-e4e4-11e7-9613-1c3e85690147.png","alt":"599584-391af3aad043c028","position":{"start":{"line":41,"column":1,"offset":691},"end":{"line":41,"column":129,"offset":819},"indent":[]}},{"type":"text","value":"\n而生产变量对象过程中有几个步骤，这些都是在函数执行前作用的，而已函数声明比变量声明优先，当声明变量与函数声明同名时，会被跳过不执行。\n","position":{"start":{"line":41,"column":129,"offset":819},"end":{"line":43,"column":1,"offset":887},"indent":[1,1]}},{"type":"image","title":null,"url":"https://user-images.githubusercontent.com/15880978/34151050-216a2730-e4e5-11e7-9655-70a647320b45.png","alt":"599584-7d131cfe82a20d37","position":{"start":{"line":43,"column":1,"offset":887},"end":{"line":43,"column":129,"offset":1015},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":565},"end":{"line":43,"column":129,"offset":1015},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"作用域","position":{"start":{"line":45,"column":5,"offset":1021},"end":{"line":45,"column":8,"offset":1024},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1017},"end":{"line":45,"column":8,"offset":1024},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"作用域只是一套规则，用来管理不同子作用域的变量，例如js在es6之前没有块级作用域，使得各函数间容易污染变量。","position":{"start":{"line":46,"column":1,"offset":1025},"end":{"line":46,"column":56,"offset":1080},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1025},"end":{"line":46,"column":56,"offset":1080},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"作用域链","position":{"start":{"line":48,"column":5,"offset":1086},"end":{"line":48,"column":9,"offset":1090},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1082},"end":{"line":48,"column":9,"offset":1090},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"你可以把作用域链当做一条绳子，你可以顺着绳子访问到每个节点上的值","position":{"start":{"line":49,"column":1,"offset":1091},"end":{"line":49,"column":33,"offset":1123},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1091},"end":{"line":49,"column":33,"offset":1123},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"关于this","position":{"start":{"line":51,"column":5,"offset":1129},"end":{"line":51,"column":11,"offset":1135},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1125},"end":{"line":51,"column":11,"offset":1135},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"关于this只要记住几句话","position":{"start":{"line":52,"column":1,"offset":1136},"end":{"line":52,"column":14,"offset":1149},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1136},"end":{"line":52,"column":14,"offset":1149},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"this要在执行时才能确认值，定义时无法确认","position":{"start":{"line":53,"column":3,"offset":1152},"end":{"line":53,"column":25,"offset":1174},"indent":[]}}],"position":{"start":{"line":53,"column":3,"offset":1152},"end":{"line":53,"column":25,"offset":1174},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1150},"end":{"line":53,"column":25,"offset":1174},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"this的指向为调用者函数的拥有者，独立调用则为underfined，非严格模式为window","position":{"start":{"line":54,"column":3,"offset":1177},"end":{"line":54,"column":50,"offset":1224},"indent":[]}}],"position":{"start":{"line":54,"column":3,"offset":1177},"end":{"line":54,"column":50,"offset":1224},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1175},"end":{"line":54,"column":50,"offset":1224},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1150},"end":{"line":54,"column":50,"offset":1224},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"this的几种执行方法","position":{"start":{"line":56,"column":1,"offset":1226},"end":{"line":56,"column":12,"offset":1237},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1226},"end":{"line":56,"column":12,"offset":1237},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"作为构造函数执行","position":{"start":{"line":57,"column":3,"offset":1240},"end":{"line":57,"column":11,"offset":1248},"indent":[]}}],"position":{"start":{"line":57,"column":3,"offset":1240},"end":{"line":57,"column":11,"offset":1248},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1238},"end":{"line":57,"column":11,"offset":1248},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"作为对象属性执行","position":{"start":{"line":58,"column":3,"offset":1251},"end":{"line":58,"column":11,"offset":1259},"indent":[]}}],"position":{"start":{"line":58,"column":3,"offset":1251},"end":{"line":58,"column":11,"offset":1259},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1249},"end":{"line":58,"column":11,"offset":1259},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"作为普通函数执行","position":{"start":{"line":59,"column":3,"offset":1262},"end":{"line":59,"column":11,"offset":1270},"indent":[]}}],"position":{"start":{"line":59,"column":3,"offset":1262},"end":{"line":59,"column":11,"offset":1270},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1260},"end":{"line":59,"column":11,"offset":1270},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"call,apply bind","position":{"start":{"line":60,"column":3,"offset":1273},"end":{"line":60,"column":18,"offset":1288},"indent":[]}}],"position":{"start":{"line":60,"column":3,"offset":1273},"end":{"line":60,"column":18,"offset":1288},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1271},"end":{"line":60,"column":18,"offset":1288},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1238},"end":{"line":60,"column":18,"offset":1288},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"闭包","position":{"start":{"line":62,"column":5,"offset":1294},"end":{"line":62,"column":7,"offset":1296},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1290},"end":{"line":62,"column":7,"offset":1296},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"所谓闭包就是在其他执行上下文中，访问到函数的内部变量，当函数被推出后，变量的引用保留而不被销毁，一般应用于模块化私有变量。","position":{"start":{"line":63,"column":1,"offset":1297},"end":{"line":63,"column":62,"offset":1358},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1297},"end":{"line":63,"column":62,"offset":1358},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"闭包的形成的两个条件","position":{"start":{"line":65,"column":1,"offset":1360},"end":{"line":65,"column":11,"offset":1370},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1360},"end":{"line":65,"column":11,"offset":1370},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"在函数内部创建新的函数","position":{"start":{"line":66,"column":3,"offset":1373},"end":{"line":66,"column":14,"offset":1384},"indent":[]}}],"position":{"start":{"line":66,"column":3,"offset":1373},"end":{"line":66,"column":14,"offset":1384},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1371},"end":{"line":66,"column":14,"offset":1384},"indent":[]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"新的函数在执行时访问了函数的变量对象","position":{"start":{"line":67,"column":3,"offset":1387},"end":{"line":67,"column":21,"offset":1405},"indent":[]}}],"position":{"start":{"line":67,"column":3,"offset":1387},"end":{"line":67,"column":21,"offset":1405},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//闭包的应用</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> num1 <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>num1 <span class=\"token operator\">?</span> num1 <span class=\"token punctuation\">:</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> num2 <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>num2 <span class=\"token operator\">?</span> num2 <span class=\"token punctuation\">:</span> b<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nwindow<span class=\"token punctuation\">.</span>add <span class=\"token operator\">=</span> add<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":68,"column":1,"offset":1406},"end":{"line":82,"column":6,"offset":1638},"indent":[1,1,5,5,1,5,5,5,1,5,5,1,5,1]}}],"position":{"start":{"line":67,"column":1,"offset":1385},"end":{"line":82,"column":6,"offset":1638},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":66,"column":1,"offset":1371},"end":{"line":82,"column":6,"offset":1638},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"add(10, 20);","position":{"start":{"line":84,"column":1,"offset":1640},"end":{"line":84,"column":13,"offset":1652},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":1640},"end":{"line":84,"column":13,"offset":1652},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-none\"><code></code></pre>\n      </div>","position":{"start":{"line":85,"column":1,"offset":1653},"end":{"line":98,"column":1,"offset":1669},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":98,"column":1,"offset":1669}}}},{"id":"transformer-remark-markdown-ast-ddc0a6d0c07417907ca04eb9e4e090f9-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":{"type":"root","children":[{"type":"yaml","value":"title: JS基础查缺补漏--变量类型与原型链\nsubTitle: 正所谓，欲穷千里目，先打好地基...\ndate: \"2017-11-11\"\npath: \"/know-js-1/\"\ncover: knowjs.png","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":7,"column":4,"offset":119},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"变量类型与变量计算","position":{"start":{"line":9,"column":4,"offset":124},"end":{"line":9,"column":13,"offset":133},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":121},"end":{"line":9,"column":13,"offset":133},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"相关知识点","position":{"start":{"line":10,"column":1,"offset":134},"end":{"line":10,"column":6,"offset":139},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":134},"end":{"line":10,"column":6,"offset":139},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"typeof能判断几种类型","position":{"start":{"line":11,"column":3,"offset":142},"end":{"line":11,"column":16,"offset":155},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":142},"end":{"line":11,"column":16,"offset":155},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":140},"end":{"line":11,"column":16,"offset":155},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"===与==区别","position":{"start":{"line":12,"column":3,"offset":158},"end":{"line":12,"column":11,"offset":166},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":158},"end":{"line":12,"column":11,"offset":166},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":156},"end":{"line":12,"column":11,"offset":166},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"内存空间问题","position":{"start":{"line":13,"column":3,"offset":169},"end":{"line":13,"column":9,"offset":175},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":169},"end":{"line":13,"column":9,"offset":175},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":167},"end":{"line":13,"column":9,"offset":175},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"变量的存储方式","position":{"start":{"line":14,"column":3,"offset":178},"end":{"line":14,"column":10,"offset":185},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":178},"end":{"line":14,"column":10,"offset":185},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":176},"end":{"line":14,"column":10,"offset":185},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"关于JSON","position":{"start":{"line":15,"column":3,"offset":188},"end":{"line":15,"column":9,"offset":194},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":188},"end":{"line":15,"column":9,"offset":194},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":186},"end":{"line":15,"column":9,"offset":194},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":140},"end":{"line":15,"column":9,"offset":194},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"typeof","position":{"start":{"line":17,"column":5,"offset":200},"end":{"line":17,"column":11,"offset":206},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":196},"end":{"line":17,"column":11,"offset":206},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"typeof 只能分辨出值类型（即五种基本类型null,underfined,Boolean,Number,String），无法分辨出引用类型（Function, Array, Object等都会被识别为Object）（除了函数）。","position":{"start":{"line":18,"column":1,"offset":207},"end":{"line":18,"column":117,"offset":323},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":207},"end":{"line":18,"column":117,"offset":323},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//Function</span>\n</code></pre>\n      </div>","position":{"start":{"line":19,"column":1,"offset":324},"end":{"line":22,"column":4,"offset":385},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"===与==","position":{"start":{"line":24,"column":5,"offset":391},"end":{"line":24,"column":11,"offset":397},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":387},"end":{"line":24,"column":11,"offset":397},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"下面几种情况会发生强制类型转换","position":{"start":{"line":25,"column":1,"offset":398},"end":{"line":25,"column":16,"offset":413},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":398},"end":{"line":25,"column":16,"offset":413},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"字符串拼接  // 1+‘1’  // ‘11’","position":{"start":{"line":26,"column":3,"offset":416},"end":{"line":26,"column":27,"offset":440},"indent":[]}}],"position":{"start":{"line":26,"column":3,"offset":416},"end":{"line":26,"column":27,"offset":440},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":414},"end":{"line":26,"column":27,"offset":440},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"==","position":{"start":{"line":27,"column":3,"offset":443},"end":{"line":27,"column":5,"offset":445},"indent":[]}}],"position":{"start":{"line":27,"column":3,"offset":443},"end":{"line":27,"column":5,"offset":445},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":441},"end":{"line":27,"column":5,"offset":445},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if语句 （if里面的判断会转换成true，false）","position":{"start":{"line":28,"column":3,"offset":448},"end":{"line":28,"column":31,"offset":476},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":448},"end":{"line":28,"column":31,"offset":476},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":446},"end":{"line":28,"column":31,"offset":476},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"逻辑运算符\n所以当需要判断进行判断的时候尽量用全等===，除了下面这个","position":{"start":{"line":29,"column":3,"offset":479},"end":{"line":30,"column":30,"offset":514},"indent":[1]}}],"position":{"start":{"line":29,"column":3,"offset":479},"end":{"line":30,"column":30,"offset":514},"indent":[1]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// 判断对象的属性是否存在</span>\nobj<span class=\"token punctuation\">.</span>a <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token comment\">// obj.a === null || obj.a === underfined</span>\n</code></pre>\n      </div>","position":{"start":{"line":31,"column":1,"offset":515},"end":{"line":34,"column":4,"offset":595},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"内存空间问题","position":{"start":{"line":35,"column":5,"offset":600},"end":{"line":35,"column":11,"offset":606},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":596},"end":{"line":35,"column":11,"offset":606},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"首先先理解三种数据结构","position":{"start":{"line":36,"column":1,"offset":607},"end":{"line":36,"column":12,"offset":618},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":607},"end":{"line":36,"column":12,"offset":618},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":477},"end":{"line":36,"column":12,"offset":618},"indent":[1,1,1,1,1,1,1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"栈 （先进后出）  应用于执行上下文，函数调用栈","position":{"start":{"line":37,"column":3,"offset":621},"end":{"line":37,"column":27,"offset":645},"indent":[]}}],"position":{"start":{"line":37,"column":3,"offset":621},"end":{"line":37,"column":27,"offset":645},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":619},"end":{"line":37,"column":27,"offset":645},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"堆  （按key-value的形式） 应用于js运行中的变量存储","position":{"start":{"line":38,"column":3,"offset":648},"end":{"line":38,"column":35,"offset":680},"indent":[]}}],"position":{"start":{"line":38,"column":3,"offset":648},"end":{"line":38,"column":35,"offset":680},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":646},"end":{"line":38,"column":35,"offset":680},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"队列 （先进先出） 应用于事件循环机制","position":{"start":{"line":39,"column":3,"offset":683},"end":{"line":39,"column":22,"offset":702},"indent":[]}}],"position":{"start":{"line":39,"column":3,"offset":683},"end":{"line":39,"column":22,"offset":702},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":681},"end":{"line":39,"column":22,"offset":702},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":414},"end":{"line":39,"column":22,"offset":702},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"值类型和引用类型","position":{"start":{"line":41,"column":5,"offset":708},"end":{"line":41,"column":13,"offset":716},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":704},"end":{"line":41,"column":13,"offset":716},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"像数字和字符串这类属于值类型，会单独分配地址。而像对象,数组,函数属于引用类型，使用地址进行引用。","position":{"start":{"line":42,"column":1,"offset":717},"end":{"line":42,"column":50,"offset":766},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":717},"end":{"line":42,"column":50,"offset":766},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token comment\">// 值引用</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> a\na <span class=\"token operator\">=</span> <span class=\"token number\">200</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 100</span>\n<span class=\"token comment\">// 引用类型</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> a\na<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">21</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span> <span class=\"token comment\">//21</span>\n</code></pre>\n      </div>","position":{"start":{"line":43,"column":1,"offset":767},"end":{"line":54,"column":4,"offset":913},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"JSON","position":{"start":{"line":56,"column":4,"offset":918},"end":{"line":56,"column":8,"offset":922},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":915},"end":{"line":56,"column":8,"offset":922},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"记住JSON是数据格式也是js对象","position":{"start":{"line":57,"column":1,"offset":923},"end":{"line":57,"column":18,"offset":940},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":923},"end":{"line":57,"column":18,"offset":940},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//常用方法，可用于对象的深拷贝</span>\nJSON<span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//对象变成字符串</span>\nJSON<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{\"a\":10,\"b\":20}'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 字符串变成对象</span>\n</code></pre>\n      </div>","position":{"start":{"line":58,"column":1,"offset":941},"end":{"line":62,"column":4,"offset":1047},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"原型与原型链","position":{"start":{"line":64,"column":4,"offset":1052},"end":{"line":64,"column":10,"offset":1058},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1049},"end":{"line":64,"column":10,"offset":1058},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"判断变量是数组类型","position":{"start":{"line":65,"column":3,"offset":1061},"end":{"line":65,"column":12,"offset":1070},"indent":[]}}],"position":{"start":{"line":65,"column":3,"offset":1061},"end":{"line":65,"column":12,"offset":1070},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1059},"end":{"line":65,"column":12,"offset":1070},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"写一个原型链继承的例子","position":{"start":{"line":66,"column":3,"offset":1073},"end":{"line":66,"column":14,"offset":1084},"indent":[]}}],"position":{"start":{"line":66,"column":3,"offset":1073},"end":{"line":66,"column":14,"offset":1084},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1071},"end":{"line":66,"column":14,"offset":1084},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"描述new一个对象的过程","position":{"start":{"line":67,"column":3,"offset":1087},"end":{"line":67,"column":15,"offset":1099},"indent":[]}}],"position":{"start":{"line":67,"column":3,"offset":1087},"end":{"line":67,"column":15,"offset":1099},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1085},"end":{"line":67,"column":15,"offset":1099},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"zepto源码中如何使用原型链","position":{"start":{"line":68,"column":3,"offset":1102},"end":{"line":68,"column":18,"offset":1117},"indent":[]}}],"position":{"start":{"line":68,"column":3,"offset":1102},"end":{"line":68,"column":18,"offset":1117},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1100},"end":{"line":68,"column":18,"offset":1117},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1059},"end":{"line":68,"column":18,"offset":1117},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"构造函数","position":{"start":{"line":70,"column":5,"offset":1123},"end":{"line":70,"column":9,"offset":1127},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1119},"end":{"line":70,"column":9,"offset":1127},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"var a = {} // var a = new Object()\na instanceof Array //判断变量是不是数组","position":{"start":{"line":71,"column":1,"offset":1128},"end":{"line":72,"column":31,"offset":1193},"indent":[1]}}],"position":{"start":{"line":71,"column":1,"offset":1128},"end":{"line":72,"column":31,"offset":1193},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"原型规则","position":{"start":{"line":73,"column":5,"offset":1198},"end":{"line":73,"column":9,"offset":1202},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1194},"end":{"line":73,"column":9,"offset":1202},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"所有引用类型都有","position":{"start":{"line":74,"column":1,"offset":1203},"end":{"line":74,"column":9,"offset":1211},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"proto","position":{"start":{"line":74,"column":11,"offset":1213},"end":{"line":74,"column":16,"offset":1218},"indent":[]}}],"position":{"start":{"line":74,"column":9,"offset":1211},"end":{"line":74,"column":18,"offset":1220},"indent":[]}},{"type":"text","value":"属性 //obj.","position":{"start":{"line":74,"column":18,"offset":1220},"end":{"line":74,"column":27,"offset":1229},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"proto","position":{"start":{"line":74,"column":29,"offset":1231},"end":{"line":74,"column":34,"offset":1236},"indent":[]}}],"position":{"start":{"line":74,"column":27,"offset":1229},"end":{"line":74,"column":36,"offset":1238},"indent":[]}},{"type":"text","value":"\n所有的函数都有一个prototype属性 // func.prototype\n所有的引用类型的","position":{"start":{"line":74,"column":36,"offset":1238},"end":{"line":76,"column":9,"offset":1286},"indent":[1,1]}},{"type":"strong","children":[{"type":"text","value":"proto","position":{"start":{"line":76,"column":11,"offset":1288},"end":{"line":76,"column":16,"offset":1293},"indent":[]}}],"position":{"start":{"line":76,"column":9,"offset":1286},"end":{"line":76,"column":18,"offset":1295},"indent":[]}},{"type":"text","value":"属性指向它的构造函数的prototype属性值 // obj.","position":{"start":{"line":76,"column":18,"offset":1295},"end":{"line":76,"column":49,"offset":1326},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"proto","position":{"start":{"line":76,"column":51,"offset":1328},"end":{"line":76,"column":56,"offset":1333},"indent":[]}}],"position":{"start":{"line":76,"column":49,"offset":1326},"end":{"line":76,"column":58,"offset":1335},"indent":[]}},{"type":"text","value":" === Object.prototype\nfor(item in f){\n if(f.hasOwnPropety(item)){}\n}\n当试图得到一个对象的属性时，如果这个对象本身没有这个属性，那就会去它的","position":{"start":{"line":76,"column":58,"offset":1335},"end":{"line":80,"column":36,"offset":1439},"indent":[1,1,1,1]}},{"type":"strong","children":[{"type":"text","value":"proto","position":{"start":{"line":80,"column":38,"offset":1441},"end":{"line":80,"column":43,"offset":1446},"indent":[]}}],"position":{"start":{"line":80,"column":36,"offset":1439},"end":{"line":80,"column":45,"offset":1448},"indent":[]}},{"type":"text","value":"中去寻找","position":{"start":{"line":80,"column":45,"offset":1448},"end":{"line":80,"column":49,"offset":1452},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1203},"end":{"line":80,"column":49,"offset":1452},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"原型链","position":{"start":{"line":81,"column":5,"offset":1457},"end":{"line":81,"column":8,"offset":1460},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":1453},"end":{"line":81,"column":10,"offset":1462},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Elem</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nElem<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">html</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> elem <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n          elem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> val\n      <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">return</span> elem<span class=\"token punctuation\">.</span>innerHTML \n      <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> div1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Elem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span>\ndiv1<span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello wrold'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":82,"column":1,"offset":1463},"end":{"line":96,"column":4,"offset":1756},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"instanceof","position":{"start":{"line":97,"column":5,"offset":1761},"end":{"line":97,"column":15,"offset":1771},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":1757},"end":{"line":97,"column":15,"offset":1771},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"前面提到无法用typeof判断一个变量是否为数组，用instanceof就可以，instanceof会根据原型链，追寻到构造函数中去，因而可以进行判断。","position":{"start":{"line":98,"column":1,"offset":1772},"end":{"line":98,"column":77,"offset":1848},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":1772},"end":{"line":98,"column":77,"offset":1848},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"new的过程","position":{"start":{"line":100,"column":5,"offset":1854},"end":{"line":100,"column":11,"offset":1860},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":1850},"end":{"line":100,"column":11,"offset":1860},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"简单来说就四个步骤","position":{"start":{"line":101,"column":1,"offset":1861},"end":{"line":101,"column":10,"offset":1870},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":1861},"end":{"line":101,"column":10,"offset":1870},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"创建一个新的对象 ","position":{"start":{"line":102,"column":3,"offset":1873},"end":{"line":102,"column":12,"offset":1882},"indent":[]}}],"position":{"start":{"line":102,"column":3,"offset":1873},"end":{"line":102,"column":12,"offset":1882},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":1871},"end":{"line":102,"column":12,"offset":1882},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"将this指向这个新的对象 // var this = {}","position":{"start":{"line":103,"column":3,"offset":1885},"end":{"line":103,"column":33,"offset":1915},"indent":[]}}],"position":{"start":{"line":103,"column":3,"offset":1885},"end":{"line":103,"column":33,"offset":1915},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":1883},"end":{"line":103,"column":33,"offset":1915},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"给对象添加属性和方法 // this.fn = {}","position":{"start":{"line":104,"column":3,"offset":1918},"end":{"line":104,"column":29,"offset":1944},"indent":[]}}],"position":{"start":{"line":104,"column":3,"offset":1918},"end":{"line":104,"column":29,"offset":1944},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":1916},"end":{"line":104,"column":29,"offset":1944},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"返回这个对象","position":{"start":{"line":105,"column":3,"offset":1947},"end":{"line":105,"column":9,"offset":1953},"indent":[]}}],"position":{"start":{"line":105,"column":3,"offset":1947},"end":{"line":105,"column":9,"offset":1953},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":1945},"end":{"line":105,"column":9,"offset":1953},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":1871},"end":{"line":105,"column":9,"offset":1953},"indent":[1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":106,"column":1,"offset":1954}}}},{"id":"transformer-remark-markdown-html-ast-ddc0a6d0c07417907ca04eb9e4e090f9-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"变量类型与变量计算","position":{"start":{"line":9,"column":4,"offset":124},"end":{"line":9,"column":13,"offset":133}}}],"position":{"start":{"line":9,"column":1,"offset":121},"end":{"line":9,"column":13,"offset":133}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"相关知识点","position":{"start":{"line":10,"column":1,"offset":134},"end":{"line":10,"column":6,"offset":139}}}],"position":{"start":{"line":10,"column":1,"offset":134},"end":{"line":10,"column":6,"offset":139}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"typeof能判断几种类型","position":{"start":{"line":11,"column":3,"offset":142},"end":{"line":11,"column":16,"offset":155}}}],"position":{"start":{"line":11,"column":1,"offset":140},"end":{"line":11,"column":16,"offset":155}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"===与==区别","position":{"start":{"line":12,"column":3,"offset":158},"end":{"line":12,"column":11,"offset":166}}}],"position":{"start":{"line":12,"column":1,"offset":156},"end":{"line":12,"column":11,"offset":166}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"内存空间问题","position":{"start":{"line":13,"column":3,"offset":169},"end":{"line":13,"column":9,"offset":175}}}],"position":{"start":{"line":13,"column":1,"offset":167},"end":{"line":13,"column":9,"offset":175}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"变量的存储方式","position":{"start":{"line":14,"column":3,"offset":178},"end":{"line":14,"column":10,"offset":185}}}],"position":{"start":{"line":14,"column":1,"offset":176},"end":{"line":14,"column":10,"offset":185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"关于JSON","position":{"start":{"line":15,"column":3,"offset":188},"end":{"line":15,"column":9,"offset":194}}}],"position":{"start":{"line":15,"column":1,"offset":186},"end":{"line":15,"column":9,"offset":194}}},{"type":"text","value":"\n"}],"position":{"start":{"line":11,"column":1,"offset":140},"end":{"line":15,"column":9,"offset":194}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"typeof","position":{"start":{"line":17,"column":5,"offset":200},"end":{"line":17,"column":11,"offset":206}}}],"position":{"start":{"line":17,"column":1,"offset":196},"end":{"line":17,"column":11,"offset":206}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"typeof 只能分辨出值类型（即五种基本类型null,underfined,Boolean,Number,String），无法分辨出引用类型（Function, Array, Object等都会被识别为Object）（除了函数）。","position":{"start":{"line":18,"column":1,"offset":207},"end":{"line":18,"column":117,"offset":323}}}],"position":{"start":{"line":18,"column":1,"offset":207},"end":{"line":18,"column":117,"offset":323}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//Function</span>\n</code></pre>\n      </div>","position":{"start":{"line":19,"column":1,"offset":324},"end":{"line":22,"column":4,"offset":385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"===与==","position":{"start":{"line":24,"column":5,"offset":391},"end":{"line":24,"column":11,"offset":397}}}],"position":{"start":{"line":24,"column":1,"offset":387},"end":{"line":24,"column":11,"offset":397}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下面几种情况会发生强制类型转换","position":{"start":{"line":25,"column":1,"offset":398},"end":{"line":25,"column":16,"offset":413}}}],"position":{"start":{"line":25,"column":1,"offset":398},"end":{"line":25,"column":16,"offset":413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"字符串拼接  // 1+‘1’  // ‘11’","position":{"start":{"line":26,"column":3,"offset":416},"end":{"line":26,"column":27,"offset":440}}}],"position":{"start":{"line":26,"column":1,"offset":414},"end":{"line":26,"column":27,"offset":440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"==","position":{"start":{"line":27,"column":3,"offset":443},"end":{"line":27,"column":5,"offset":445}}}],"position":{"start":{"line":27,"column":1,"offset":441},"end":{"line":27,"column":5,"offset":445}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"if语句 （if里面的判断会转换成true，false）","position":{"start":{"line":28,"column":3,"offset":448},"end":{"line":28,"column":31,"offset":476}}}],"position":{"start":{"line":28,"column":1,"offset":446},"end":{"line":28,"column":31,"offset":476}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"逻辑运算符\n所以当需要判断进行判断的时候尽量用全等===，除了下面这个","position":{"start":{"line":29,"column":3,"offset":479},"end":{"line":30,"column":30,"offset":514}}}],"position":{"start":{"line":29,"column":3,"offset":479},"end":{"line":30,"column":30,"offset":514}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// 判断对象的属性是否存在</span>\nobj<span class=\"token punctuation\">.</span>a <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token comment\">// obj.a === null || obj.a === underfined</span>\n</code></pre>\n      </div>","position":{"start":{"line":31,"column":1,"offset":515},"end":{"line":34,"column":4,"offset":595}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"内存空间问题","position":{"start":{"line":35,"column":5,"offset":600},"end":{"line":35,"column":11,"offset":606}}}],"position":{"start":{"line":35,"column":1,"offset":596},"end":{"line":35,"column":11,"offset":606}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"首先先理解三种数据结构","position":{"start":{"line":36,"column":1,"offset":607},"end":{"line":36,"column":12,"offset":618}}}],"position":{"start":{"line":36,"column":1,"offset":607},"end":{"line":36,"column":12,"offset":618}}},{"type":"text","value":"\n"}],"position":{"start":{"line":29,"column":1,"offset":477},"end":{"line":36,"column":12,"offset":618}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"栈 （先进后出）  应用于执行上下文，函数调用栈","position":{"start":{"line":37,"column":3,"offset":621},"end":{"line":37,"column":27,"offset":645}}}],"position":{"start":{"line":37,"column":1,"offset":619},"end":{"line":37,"column":27,"offset":645}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"堆  （按key-value的形式） 应用于js运行中的变量存储","position":{"start":{"line":38,"column":3,"offset":648},"end":{"line":38,"column":35,"offset":680}}}],"position":{"start":{"line":38,"column":1,"offset":646},"end":{"line":38,"column":35,"offset":680}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"队列 （先进先出） 应用于事件循环机制","position":{"start":{"line":39,"column":3,"offset":683},"end":{"line":39,"column":22,"offset":702}}}],"position":{"start":{"line":39,"column":1,"offset":681},"end":{"line":39,"column":22,"offset":702}}},{"type":"text","value":"\n"}],"position":{"start":{"line":26,"column":1,"offset":414},"end":{"line":39,"column":22,"offset":702}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"值类型和引用类型","position":{"start":{"line":41,"column":5,"offset":708},"end":{"line":41,"column":13,"offset":716}}}],"position":{"start":{"line":41,"column":1,"offset":704},"end":{"line":41,"column":13,"offset":716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"像数字和字符串这类属于值类型，会单独分配地址。而像对象,数组,函数属于引用类型，使用地址进行引用。","position":{"start":{"line":42,"column":1,"offset":717},"end":{"line":42,"column":50,"offset":766}}}],"position":{"start":{"line":42,"column":1,"offset":717},"end":{"line":42,"column":50,"offset":766}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token comment\">// 值引用</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> a\na <span class=\"token operator\">=</span> <span class=\"token number\">200</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 100</span>\n<span class=\"token comment\">// 引用类型</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> a\na<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">21</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span> <span class=\"token comment\">//21</span>\n</code></pre>\n      </div>","position":{"start":{"line":43,"column":1,"offset":767},"end":{"line":54,"column":4,"offset":913}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"JSON","position":{"start":{"line":56,"column":4,"offset":918},"end":{"line":56,"column":8,"offset":922}}}],"position":{"start":{"line":56,"column":1,"offset":915},"end":{"line":56,"column":8,"offset":922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"记住JSON是数据格式也是js对象","position":{"start":{"line":57,"column":1,"offset":923},"end":{"line":57,"column":18,"offset":940}}}],"position":{"start":{"line":57,"column":1,"offset":923},"end":{"line":57,"column":18,"offset":940}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//常用方法，可用于对象的深拷贝</span>\nJSON<span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//对象变成字符串</span>\nJSON<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{\"a\":10,\"b\":20}'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 字符串变成对象</span>\n</code></pre>\n      </div>","position":{"start":{"line":58,"column":1,"offset":941},"end":{"line":62,"column":4,"offset":1047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"原型与原型链","position":{"start":{"line":64,"column":4,"offset":1052},"end":{"line":64,"column":10,"offset":1058}}}],"position":{"start":{"line":64,"column":1,"offset":1049},"end":{"line":64,"column":10,"offset":1058}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"判断变量是数组类型","position":{"start":{"line":65,"column":3,"offset":1061},"end":{"line":65,"column":12,"offset":1070}}}],"position":{"start":{"line":65,"column":1,"offset":1059},"end":{"line":65,"column":12,"offset":1070}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"写一个原型链继承的例子","position":{"start":{"line":66,"column":3,"offset":1073},"end":{"line":66,"column":14,"offset":1084}}}],"position":{"start":{"line":66,"column":1,"offset":1071},"end":{"line":66,"column":14,"offset":1084}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"描述new一个对象的过程","position":{"start":{"line":67,"column":3,"offset":1087},"end":{"line":67,"column":15,"offset":1099}}}],"position":{"start":{"line":67,"column":1,"offset":1085},"end":{"line":67,"column":15,"offset":1099}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"zepto源码中如何使用原型链","position":{"start":{"line":68,"column":3,"offset":1102},"end":{"line":68,"column":18,"offset":1117}}}],"position":{"start":{"line":68,"column":1,"offset":1100},"end":{"line":68,"column":18,"offset":1117}}},{"type":"text","value":"\n"}],"position":{"start":{"line":65,"column":1,"offset":1059},"end":{"line":68,"column":18,"offset":1117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"构造函数","position":{"start":{"line":70,"column":5,"offset":1123},"end":{"line":70,"column":9,"offset":1127}}}],"position":{"start":{"line":70,"column":1,"offset":1119},"end":{"line":70,"column":9,"offset":1127}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"var a = {} // var a = new Object()\na instanceof Array //判断变量是不是数组","position":{"start":{"line":71,"column":1,"offset":1128},"end":{"line":72,"column":31,"offset":1193}}}],"position":{"start":{"line":71,"column":1,"offset":1128},"end":{"line":72,"column":31,"offset":1193}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"原型规则","position":{"start":{"line":73,"column":5,"offset":1198},"end":{"line":73,"column":9,"offset":1202}}}],"position":{"start":{"line":73,"column":1,"offset":1194},"end":{"line":73,"column":9,"offset":1202}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"所有引用类型都有","position":{"start":{"line":74,"column":1,"offset":1203},"end":{"line":74,"column":9,"offset":1211}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"proto","position":{"start":{"line":74,"column":11,"offset":1213},"end":{"line":74,"column":16,"offset":1218}}}],"position":{"start":{"line":74,"column":9,"offset":1211},"end":{"line":74,"column":18,"offset":1220}}},{"type":"text","value":"属性 //obj.","position":{"start":{"line":74,"column":18,"offset":1220},"end":{"line":74,"column":27,"offset":1229}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"proto","position":{"start":{"line":74,"column":29,"offset":1231},"end":{"line":74,"column":34,"offset":1236}}}],"position":{"start":{"line":74,"column":27,"offset":1229},"end":{"line":74,"column":36,"offset":1238}}},{"type":"text","value":"\n所有的函数都有一个prototype属性 // func.prototype\n所有的引用类型的","position":{"start":{"line":74,"column":36,"offset":1238},"end":{"line":76,"column":9,"offset":1286}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"proto","position":{"start":{"line":76,"column":11,"offset":1288},"end":{"line":76,"column":16,"offset":1293}}}],"position":{"start":{"line":76,"column":9,"offset":1286},"end":{"line":76,"column":18,"offset":1295}}},{"type":"text","value":"属性指向它的构造函数的prototype属性值 // obj.","position":{"start":{"line":76,"column":18,"offset":1295},"end":{"line":76,"column":49,"offset":1326}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"proto","position":{"start":{"line":76,"column":51,"offset":1328},"end":{"line":76,"column":56,"offset":1333}}}],"position":{"start":{"line":76,"column":49,"offset":1326},"end":{"line":76,"column":58,"offset":1335}}},{"type":"text","value":" === Object.prototype\nfor(item in f){\nif(f.hasOwnPropety(item)){}\n}\n当试图得到一个对象的属性时，如果这个对象本身没有这个属性，那就会去它的","position":{"start":{"line":76,"column":58,"offset":1335},"end":{"line":80,"column":36,"offset":1439}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"proto","position":{"start":{"line":80,"column":38,"offset":1441},"end":{"line":80,"column":43,"offset":1446}}}],"position":{"start":{"line":80,"column":36,"offset":1439},"end":{"line":80,"column":45,"offset":1448}}},{"type":"text","value":"中去寻找","position":{"start":{"line":80,"column":45,"offset":1448},"end":{"line":80,"column":49,"offset":1452}}}],"position":{"start":{"line":74,"column":1,"offset":1203},"end":{"line":80,"column":49,"offset":1452}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"原型链","position":{"start":{"line":81,"column":5,"offset":1457},"end":{"line":81,"column":8,"offset":1460}}}],"position":{"start":{"line":81,"column":1,"offset":1453},"end":{"line":81,"column":10,"offset":1462}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Elem</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nElem<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">html</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> elem <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n          elem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> val\n      <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">return</span> elem<span class=\"token punctuation\">.</span>innerHTML \n      <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> div1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Elem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span>\ndiv1<span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello wrold'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":82,"column":1,"offset":1463},"end":{"line":96,"column":4,"offset":1756}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"instanceof","position":{"start":{"line":97,"column":5,"offset":1761},"end":{"line":97,"column":15,"offset":1771}}}],"position":{"start":{"line":97,"column":1,"offset":1757},"end":{"line":97,"column":15,"offset":1771}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"前面提到无法用typeof判断一个变量是否为数组，用instanceof就可以，instanceof会根据原型链，追寻到构造函数中去，因而可以进行判断。","position":{"start":{"line":98,"column":1,"offset":1772},"end":{"line":98,"column":77,"offset":1848}}}],"position":{"start":{"line":98,"column":1,"offset":1772},"end":{"line":98,"column":77,"offset":1848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"new的过程","position":{"start":{"line":100,"column":5,"offset":1854},"end":{"line":100,"column":11,"offset":1860}}}],"position":{"start":{"line":100,"column":1,"offset":1850},"end":{"line":100,"column":11,"offset":1860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"简单来说就四个步骤","position":{"start":{"line":101,"column":1,"offset":1861},"end":{"line":101,"column":10,"offset":1870}}}],"position":{"start":{"line":101,"column":1,"offset":1861},"end":{"line":101,"column":10,"offset":1870}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"创建一个新的对象 ","position":{"start":{"line":102,"column":3,"offset":1873},"end":{"line":102,"column":12,"offset":1882}}}],"position":{"start":{"line":102,"column":1,"offset":1871},"end":{"line":102,"column":12,"offset":1882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"将this指向这个新的对象 // var this = {}","position":{"start":{"line":103,"column":3,"offset":1885},"end":{"line":103,"column":33,"offset":1915}}}],"position":{"start":{"line":103,"column":1,"offset":1883},"end":{"line":103,"column":33,"offset":1915}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"给对象添加属性和方法 // this.fn = {}","position":{"start":{"line":104,"column":3,"offset":1918},"end":{"line":104,"column":29,"offset":1944}}}],"position":{"start":{"line":104,"column":1,"offset":1916},"end":{"line":104,"column":29,"offset":1944}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"返回这个对象","position":{"start":{"line":105,"column":3,"offset":1947},"end":{"line":105,"column":9,"offset":1953}}}],"position":{"start":{"line":105,"column":1,"offset":1945},"end":{"line":105,"column":9,"offset":1953}}},{"type":"text","value":"\n"}],"position":{"start":{"line":102,"column":1,"offset":1871},"end":{"line":105,"column":9,"offset":1953}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":106,"column":1,"offset":1954}}}},{"id":"transformer-remark-markdown-html-ast-118a167ba7f9a9986470ab52258a2fc5-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"作用域与闭包","position":{"start":{"line":9,"column":4,"offset":122},"end":{"line":9,"column":10,"offset":128}}}],"position":{"start":{"line":9,"column":1,"offset":119},"end":{"line":9,"column":10,"offset":128}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"先看几个问题：","position":{"start":{"line":10,"column":1,"offset":129},"end":{"line":10,"column":8,"offset":136}}}],"position":{"start":{"line":10,"column":1,"offset":129},"end":{"line":10,"column":8,"offset":136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"对变量提升的理解","position":{"start":{"line":11,"column":3,"offset":139},"end":{"line":11,"column":11,"offset":147}}}],"position":{"start":{"line":11,"column":1,"offset":137},"end":{"line":11,"column":11,"offset":147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"说明this几种不同的使用场景","position":{"start":{"line":12,"column":3,"offset":150},"end":{"line":12,"column":18,"offset":165}}}],"position":{"start":{"line":12,"column":1,"offset":148},"end":{"line":12,"column":18,"offset":165}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"创建10个","position":{"start":{"line":13,"column":3,"offset":168},"end":{"line":13,"column":8,"offset":173}}},{"type":"raw","value":"<a>","position":{"start":{"line":13,"column":8,"offset":173},"end":{"line":13,"column":11,"offset":176}}},{"type":"text","value":"标签，点击的时候弹出对应的序号","position":{"start":{"line":13,"column":11,"offset":176},"end":{"line":13,"column":26,"offset":191}}}],"position":{"start":{"line":13,"column":1,"offset":166},"end":{"line":13,"column":26,"offset":191}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"如何理解作用域","position":{"start":{"line":14,"column":3,"offset":194},"end":{"line":14,"column":10,"offset":201}}}],"position":{"start":{"line":14,"column":1,"offset":192},"end":{"line":14,"column":10,"offset":201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"实际开发中闭包的作用","position":{"start":{"line":15,"column":3,"offset":204},"end":{"line":15,"column":13,"offset":214}}}],"position":{"start":{"line":15,"column":1,"offset":202},"end":{"line":15,"column":13,"offset":214}}},{"type":"text","value":"\n"}],"position":{"start":{"line":11,"column":1,"offset":137},"end":{"line":15,"column":13,"offset":214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"知识点：","position":{"start":{"line":17,"column":1,"offset":216},"end":{"line":17,"column":5,"offset":220}}}],"position":{"start":{"line":17,"column":1,"offset":216},"end":{"line":17,"column":5,"offset":220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"执行上下文","position":{"start":{"line":18,"column":3,"offset":223},"end":{"line":18,"column":8,"offset":228}}}],"position":{"start":{"line":18,"column":1,"offset":221},"end":{"line":18,"column":8,"offset":228}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"作用域","position":{"start":{"line":19,"column":3,"offset":231},"end":{"line":19,"column":6,"offset":234}}}],"position":{"start":{"line":19,"column":1,"offset":229},"end":{"line":19,"column":6,"offset":234}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"作用域链","position":{"start":{"line":20,"column":3,"offset":237},"end":{"line":20,"column":7,"offset":241}}}],"position":{"start":{"line":20,"column":1,"offset":235},"end":{"line":20,"column":7,"offset":241}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"闭包","position":{"start":{"line":21,"column":3,"offset":244},"end":{"line":21,"column":5,"offset":246}}}],"position":{"start":{"line":21,"column":1,"offset":242},"end":{"line":21,"column":5,"offset":246}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"this","position":{"start":{"line":22,"column":3,"offset":249},"end":{"line":22,"column":7,"offset":253}}}],"position":{"start":{"line":22,"column":1,"offset":247},"end":{"line":22,"column":7,"offset":253}}},{"type":"text","value":"\n"}],"position":{"start":{"line":18,"column":1,"offset":221},"end":{"line":22,"column":7,"offset":253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"执行上下文","position":{"start":{"line":24,"column":5,"offset":259},"end":{"line":24,"column":10,"offset":264}}}],"position":{"start":{"line":24,"column":1,"offset":255},"end":{"line":24,"column":10,"offset":264}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"首先知道js是单线程的，当一个函数调用时会创建一个执行上下文，然后推人函数调用栈，调用结束后会推出栈","position":{"start":{"line":25,"column":1,"offset":265},"end":{"line":25,"column":51,"offset":315}}}],"position":{"start":{"line":25,"column":1,"offset":265},"end":{"line":25,"column":51,"offset":315}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">changeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> anotherColor <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> tempColor <span class=\"token operator\">=</span> anotherColor<span class=\"token punctuation\">;</span>\n        anotherColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n        color <span class=\"token operator\">=</span> tempColor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">swapColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">changeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":26,"column":1,"offset":316},"end":{"line":38,"column":4,"offset":564}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://user-images.githubusercontent.com/15880978/34150833-894ad738-e4e4-11e7-9455-e932f1680119.png","alt":"1"},"children":[],"position":{"start":{"line":39,"column":1,"offset":565},"end":{"line":39,"column":107,"offset":671}}},{"type":"text","value":"\n当执行上下文创建的时候有两个生命周期\n","position":{"start":{"line":39,"column":107,"offset":671},"end":{"line":41,"column":1,"offset":691}}},{"type":"element","tagName":"img","properties":{"src":"https://user-images.githubusercontent.com/15880978/34150979-e9b9cb56-e4e4-11e7-9613-1c3e85690147.png","alt":"599584-391af3aad043c028"},"children":[],"position":{"start":{"line":41,"column":1,"offset":691},"end":{"line":41,"column":129,"offset":819}}},{"type":"text","value":"\n而生产变量对象过程中有几个步骤，这些都是在函数执行前作用的，而已函数声明比变量声明优先，当声明变量与函数声明同名时，会被跳过不执行。\n","position":{"start":{"line":41,"column":129,"offset":819},"end":{"line":43,"column":1,"offset":887}}},{"type":"element","tagName":"img","properties":{"src":"https://user-images.githubusercontent.com/15880978/34151050-216a2730-e4e5-11e7-9655-70a647320b45.png","alt":"599584-7d131cfe82a20d37"},"children":[],"position":{"start":{"line":43,"column":1,"offset":887},"end":{"line":43,"column":129,"offset":1015}}}],"position":{"start":{"line":39,"column":1,"offset":565},"end":{"line":43,"column":129,"offset":1015}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"作用域","position":{"start":{"line":45,"column":5,"offset":1021},"end":{"line":45,"column":8,"offset":1024}}}],"position":{"start":{"line":45,"column":1,"offset":1017},"end":{"line":45,"column":8,"offset":1024}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"作用域只是一套规则，用来管理不同子作用域的变量，例如js在es6之前没有块级作用域，使得各函数间容易污染变量。","position":{"start":{"line":46,"column":1,"offset":1025},"end":{"line":46,"column":56,"offset":1080}}}],"position":{"start":{"line":46,"column":1,"offset":1025},"end":{"line":46,"column":56,"offset":1080}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"作用域链","position":{"start":{"line":48,"column":5,"offset":1086},"end":{"line":48,"column":9,"offset":1090}}}],"position":{"start":{"line":48,"column":1,"offset":1082},"end":{"line":48,"column":9,"offset":1090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"你可以把作用域链当做一条绳子，你可以顺着绳子访问到每个节点上的值","position":{"start":{"line":49,"column":1,"offset":1091},"end":{"line":49,"column":33,"offset":1123}}}],"position":{"start":{"line":49,"column":1,"offset":1091},"end":{"line":49,"column":33,"offset":1123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"关于this","position":{"start":{"line":51,"column":5,"offset":1129},"end":{"line":51,"column":11,"offset":1135}}}],"position":{"start":{"line":51,"column":1,"offset":1125},"end":{"line":51,"column":11,"offset":1135}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"关于this只要记住几句话","position":{"start":{"line":52,"column":1,"offset":1136},"end":{"line":52,"column":14,"offset":1149}}}],"position":{"start":{"line":52,"column":1,"offset":1136},"end":{"line":52,"column":14,"offset":1149}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"this要在执行时才能确认值，定义时无法确认","position":{"start":{"line":53,"column":3,"offset":1152},"end":{"line":53,"column":25,"offset":1174}}}],"position":{"start":{"line":53,"column":1,"offset":1150},"end":{"line":53,"column":25,"offset":1174}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"this的指向为调用者函数的拥有者，独立调用则为underfined，非严格模式为window","position":{"start":{"line":54,"column":3,"offset":1177},"end":{"line":54,"column":50,"offset":1224}}}],"position":{"start":{"line":54,"column":1,"offset":1175},"end":{"line":54,"column":50,"offset":1224}}},{"type":"text","value":"\n"}],"position":{"start":{"line":53,"column":1,"offset":1150},"end":{"line":54,"column":50,"offset":1224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"this的几种执行方法","position":{"start":{"line":56,"column":1,"offset":1226},"end":{"line":56,"column":12,"offset":1237}}}],"position":{"start":{"line":56,"column":1,"offset":1226},"end":{"line":56,"column":12,"offset":1237}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"作为构造函数执行","position":{"start":{"line":57,"column":3,"offset":1240},"end":{"line":57,"column":11,"offset":1248}}}],"position":{"start":{"line":57,"column":1,"offset":1238},"end":{"line":57,"column":11,"offset":1248}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"作为对象属性执行","position":{"start":{"line":58,"column":3,"offset":1251},"end":{"line":58,"column":11,"offset":1259}}}],"position":{"start":{"line":58,"column":1,"offset":1249},"end":{"line":58,"column":11,"offset":1259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"作为普通函数执行","position":{"start":{"line":59,"column":3,"offset":1262},"end":{"line":59,"column":11,"offset":1270}}}],"position":{"start":{"line":59,"column":1,"offset":1260},"end":{"line":59,"column":11,"offset":1270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"call,apply bind","position":{"start":{"line":60,"column":3,"offset":1273},"end":{"line":60,"column":18,"offset":1288}}}],"position":{"start":{"line":60,"column":1,"offset":1271},"end":{"line":60,"column":18,"offset":1288}}},{"type":"text","value":"\n"}],"position":{"start":{"line":57,"column":1,"offset":1238},"end":{"line":60,"column":18,"offset":1288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"闭包","position":{"start":{"line":62,"column":5,"offset":1294},"end":{"line":62,"column":7,"offset":1296}}}],"position":{"start":{"line":62,"column":1,"offset":1290},"end":{"line":62,"column":7,"offset":1296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"所谓闭包就是在其他执行上下文中，访问到函数的内部变量，当函数被推出后，变量的引用保留而不被销毁，一般应用于模块化私有变量。","position":{"start":{"line":63,"column":1,"offset":1297},"end":{"line":63,"column":62,"offset":1358}}}],"position":{"start":{"line":63,"column":1,"offset":1297},"end":{"line":63,"column":62,"offset":1358}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"闭包的形成的两个条件","position":{"start":{"line":65,"column":1,"offset":1360},"end":{"line":65,"column":11,"offset":1370}}}],"position":{"start":{"line":65,"column":1,"offset":1360},"end":{"line":65,"column":11,"offset":1370}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在函数内部创建新的函数","position":{"start":{"line":66,"column":3,"offset":1373},"end":{"line":66,"column":14,"offset":1384}}}],"position":{"start":{"line":66,"column":3,"offset":1373},"end":{"line":66,"column":14,"offset":1384}}},{"type":"text","value":"\n"}],"position":{"start":{"line":66,"column":1,"offset":1371},"end":{"line":66,"column":14,"offset":1384}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"新的函数在执行时访问了函数的变量对象","position":{"start":{"line":67,"column":3,"offset":1387},"end":{"line":67,"column":21,"offset":1405}}}],"position":{"start":{"line":67,"column":3,"offset":1387},"end":{"line":67,"column":21,"offset":1405}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//闭包的应用</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> num1 <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>num1 <span class=\"token operator\">?</span> num1 <span class=\"token punctuation\">:</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> num2 <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>num2 <span class=\"token operator\">?</span> num2 <span class=\"token punctuation\">:</span> b<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nwindow<span class=\"token punctuation\">.</span>add <span class=\"token operator\">=</span> add<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":68,"column":1,"offset":1406},"end":{"line":82,"column":6,"offset":1638}}},{"type":"text","value":"\n"}],"position":{"start":{"line":67,"column":1,"offset":1385},"end":{"line":82,"column":6,"offset":1638}}},{"type":"text","value":"\n"}],"position":{"start":{"line":66,"column":1,"offset":1371},"end":{"line":82,"column":6,"offset":1638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"add(10, 20);","position":{"start":{"line":84,"column":1,"offset":1640},"end":{"line":84,"column":13,"offset":1652}}}],"position":{"start":{"line":84,"column":1,"offset":1640},"end":{"line":84,"column":13,"offset":1652}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-none\"><code></code></pre>\n      </div>","position":{"start":{"line":85,"column":1,"offset":1653},"end":{"line":98,"column":1,"offset":1669}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":98,"column":1,"offset":1669}}}},{"id":"transformer-remark-markdown-html-ast-64ffbea6144986c0dc8b9780e7193fc8-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"异步与单线程","position":{"start":{"line":9,"column":4,"offset":131},"end":{"line":9,"column":10,"offset":137}}}],"position":{"start":{"line":9,"column":1,"offset":128},"end":{"line":9,"column":10,"offset":137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"几个问题","position":{"start":{"line":10,"column":1,"offset":138},"end":{"line":10,"column":5,"offset":142}}}],"position":{"start":{"line":10,"column":1,"offset":138},"end":{"line":10,"column":5,"offset":142}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"同步和异步的区别","position":{"start":{"line":11,"column":3,"offset":145},"end":{"line":11,"column":11,"offset":153}}}],"position":{"start":{"line":11,"column":1,"offset":143},"end":{"line":11,"column":11,"offset":153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"使用异步的场景","position":{"start":{"line":12,"column":3,"offset":156},"end":{"line":12,"column":10,"offset":163}}}],"position":{"start":{"line":12,"column":1,"offset":154},"end":{"line":12,"column":10,"offset":163}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"获取2017-11-11的格式日期","position":{"start":{"line":13,"column":3,"offset":166},"end":{"line":13,"column":20,"offset":183}}}],"position":{"start":{"line":13,"column":1,"offset":164},"end":{"line":13,"column":20,"offset":183}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"获取随机数，要求是长度一致的字符串格式","position":{"start":{"line":14,"column":3,"offset":186},"end":{"line":14,"column":22,"offset":205}}}],"position":{"start":{"line":14,"column":1,"offset":184},"end":{"line":14,"column":22,"offset":205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"写一个能遍历对象和数组的通用foreach函数","position":{"start":{"line":15,"column":3,"offset":208},"end":{"line":15,"column":26,"offset":231}}}],"position":{"start":{"line":15,"column":3,"offset":208},"end":{"line":15,"column":26,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"异步","position":{"start":{"line":16,"column":5,"offset":236},"end":{"line":16,"column":7,"offset":238}}}],"position":{"start":{"line":16,"column":1,"offset":232},"end":{"line":16,"column":7,"offset":238}}},{"type":"text","value":"\n"}],"position":{"start":{"line":15,"column":1,"offset":206},"end":{"line":16,"column":7,"offset":238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"由于js是单线程,所以需要异步，比如Ajax,好处就是节约时间，不会阻塞","position":{"start":{"line":17,"column":3,"offset":241},"end":{"line":17,"column":39,"offset":277}}}],"position":{"start":{"line":17,"column":3,"offset":241},"end":{"line":17,"column":39,"offset":277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"获取日期格式","position":{"start":{"line":18,"column":5,"offset":282},"end":{"line":18,"column":11,"offset":288}}}],"position":{"start":{"line":18,"column":1,"offset":278},"end":{"line":18,"column":11,"offset":288}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">formateDate</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> year <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> month <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">var</span> day <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>month <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    month <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> month\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>day <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    day <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> date\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">return</span> year <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span> month <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> day\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> Date <span class=\"token operator\">=</span> <span class=\"token function\">formateDate</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":19,"column":1,"offset":289},"end":{"line":38,"column":4,"offset":689}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"长度一致的字符串格式","position":{"start":{"line":39,"column":5,"offset":694},"end":{"line":39,"column":15,"offset":704}}}],"position":{"start":{"line":39,"column":1,"offset":690},"end":{"line":39,"column":15,"offset":704}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">var</span> random <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> random <span class=\"token operator\">=</span> random <span class=\"token operator\">+</span> <span class=\"token string\">'0000000000'</span>\n<span class=\"token keyword\">var</span> random <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":40,"column":1,"offset":705},"end":{"line":45,"column":4,"offset":828}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"foreach函数","position":{"start":{"line":46,"column":5,"offset":833},"end":{"line":46,"column":14,"offset":842}}}],"position":{"start":{"line":46,"column":1,"offset":829},"end":{"line":46,"column":14,"offset":842}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> key\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>obj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    obj<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":47,"column":1,"offset":843},"end":{"line":60,"column":4,"offset":1095}}},{"type":"text","value":"\n"}],"position":{"start":{"line":17,"column":1,"offset":239},"end":{"line":60,"column":4,"offset":1095}}},{"type":"text","value":"\n"}],"position":{"start":{"line":11,"column":1,"offset":143},"end":{"line":60,"column":4,"offset":1095}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":60,"column":4,"offset":1095}}}},{"id":"transformer-remark-markdown-html-ast-596c91d811ec000e05b39d01a9155944-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":{"type":"root","children":[{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"前后端分离的大背景，学习node构建为前端提供json格式的数据，遵循restful api的设计风格，有利于前端工程师的进一步深入，向全栈工程师又迈出一小步。","position":{"start":{"line":9,"column":3,"offset":133},"end":{"line":9,"column":83,"offset":213}}}],"position":{"start":{"line":9,"column":3,"offset":133},"end":{"line":9,"column":83,"offset":213}}},{"type":"text","value":"\n"}],"position":{"start":{"line":9,"column":1,"offset":131},"end":{"line":9,"column":83,"offset":213}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"环境","position":{"start":{"line":11,"column":5,"offset":219},"end":{"line":11,"column":7,"offset":221}}}],"position":{"start":{"line":11,"column":1,"offset":215},"end":{"line":11,"column":7,"offset":221}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Node.js","position":{"start":{"line":12,"column":3,"offset":224},"end":{"line":12,"column":10,"offset":231}}}],"position":{"start":{"line":12,"column":1,"offset":222},"end":{"line":12,"column":10,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"MongoDB","position":{"start":{"line":13,"column":3,"offset":234},"end":{"line":13,"column":10,"offset":241}}}],"position":{"start":{"line":13,"column":1,"offset":232},"end":{"line":13,"column":10,"offset":241}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":222},"end":{"line":13,"column":10,"offset":241}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"环境安装我就不细讲了，搜索引擎都有，Window配置MongoDB是有点烦的，开发还是尽量来台mac吧.","position":{"start":{"line":15,"column":1,"offset":243},"end":{"line":15,"column":53,"offset":295}}}],"position":{"start":{"line":15,"column":1,"offset":243},"end":{"line":15,"column":53,"offset":295}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"文件目录","position":{"start":{"line":17,"column":5,"offset":301},"end":{"line":17,"column":9,"offset":305}}}],"position":{"start":{"line":17,"column":1,"offset":297},"end":{"line":17,"column":9,"offset":305}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-none\"><code>-app  \n  -models //数据库相关\n     -bear.js\n-package.json //依赖文件\n-server.js //node服务</code></pre>\n      </div>","position":{"start":{"line":18,"column":1,"offset":306},"end":{"line":24,"column":4,"offset":393}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"步骤是npm init后会生成package.json,然后安装相关依赖","position":{"start":{"line":26,"column":1,"offset":395},"end":{"line":26,"column":37,"offset":431}}}],"position":{"start":{"line":26,"column":1,"offset":395},"end":{"line":26,"column":37,"offset":431}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code>  <span class=\"token string\">\"dependencies\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"body-parser\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^1.18.2\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"express\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^4.16.2\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"mongoose\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^4.13.5\"</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":27,"column":1,"offset":432},"end":{"line":33,"column":4,"offset":547}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"启动一个node服务","position":{"start":{"line":34,"column":5,"offset":552},"end":{"line":34,"column":15,"offset":562}}}],"position":{"start":{"line":34,"column":1,"offset":548},"end":{"line":34,"column":15,"offset":562}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token comment\">// express为node的框架，虽然现在koa好像比较流行，但是还值得入门学一下。</span>\n<span class=\"token comment\">// body-parser可以理解为解析数据的工具</span>\n<span class=\"token comment\">// app.use(path,callback),为指定路径添加中间件，如果没有path,则默认'/'，</span>\n<span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bodyParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body-parser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>PORT <span class=\"token operator\">||</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> router <span class=\"token operator\">=</span> express<span class=\"token punctuation\">.</span><span class=\"token function\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'something is get!!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    message<span class=\"token punctuation\">:</span> <span class=\"token string\">'hello, world!'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api'</span><span class=\"token punctuation\">,</span> router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'magic is coming'</span> <span class=\"token operator\">+</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":35,"column":1,"offset":563},"end":{"line":60,"column":4,"offset":1161}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"数据库服务","position":{"start":{"line":61,"column":5,"offset":1166},"end":{"line":61,"column":10,"offset":1171}}}],"position":{"start":{"line":61,"column":1,"offset":1162},"end":{"line":61,"column":10,"offset":1171}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"bear.js","position":{"start":{"line":62,"column":1,"offset":1172},"end":{"line":62,"column":8,"offset":1179}}}],"position":{"start":{"line":62,"column":1,"offset":1172},"end":{"line":62,"column":8,"offset":1179}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token comment\">// new Schema生成一张表，</span>\n<span class=\"token comment\">// mongoose.model(name,Schema)给表命名</span>\n<span class=\"token keyword\">var</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> Schema <span class=\"token operator\">=</span> mongoose<span class=\"token punctuation\">.</span>Schema<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> BearSchema <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Schema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> mongoose<span class=\"token punctuation\">.</span><span class=\"token function\">model</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bear'</span><span class=\"token punctuation\">,</span> BearSchema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":63,"column":1,"offset":1180},"end":{"line":73,"column":4,"offset":1421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"api编写","position":{"start":{"line":74,"column":5,"offset":1426},"end":{"line":74,"column":10,"offset":1431}}}],"position":{"start":{"line":74,"column":1,"offset":1422},"end":{"line":74,"column":10,"offset":1431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"server.js","position":{"start":{"line":75,"column":1,"offset":1432},"end":{"line":75,"column":10,"offset":1441}}}],"position":{"start":{"line":75,"column":1,"offset":1432},"end":{"line":75,"column":10,"offset":1441}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">// 引入mongo</span>\n<span class=\"token keyword\">var</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmongoose<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb://localhost/node_api'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> Bear <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./app/models/bear'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">//post请求获取数据 req.body.name</span>\n<span class=\"token comment\">//get请求获取数据 req.params.name.</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bears'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> bear <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Bear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        message<span class=\"token punctuation\">:</span> <span class=\"token string\">'bear is created!!!'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    Bear<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span>bears<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>bears<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":76,"column":1,"offset":1442},"end":{"line":108,"column":4,"offset":2088}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"相关完整代码","position":{"start":{"line":109,"column":5,"offset":2093},"end":{"line":109,"column":11,"offset":2099}}}],"position":{"start":{"line":109,"column":1,"offset":2089},"end":{"line":109,"column":11,"offset":2099}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"server.js","position":{"start":{"line":110,"column":1,"offset":2100},"end":{"line":110,"column":10,"offset":2109}}}],"position":{"start":{"line":110,"column":1,"offset":2100},"end":{"line":110,"column":10,"offset":2109}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bodyParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body-parser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmongoose<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb://localhost/node_api'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> Bear <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./app/models/bear'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>PORT <span class=\"token operator\">||</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> router <span class=\"token operator\">=</span> express<span class=\"token punctuation\">.</span><span class=\"token function\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// middleware</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">,</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'something is happen!!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bears'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> bear <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Bear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        message<span class=\"token punctuation\">:</span> <span class=\"token string\">'bear is created!!!'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    Bear<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span>bears<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>bears<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bears/:bear_id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  Bear<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>bear_id<span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  Bear<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>bear_id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    bear<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        message<span class=\"token punctuation\">:</span> <span class=\"token string\">'Bear is update success!!!'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  Bear<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    _id<span class=\"token punctuation\">:</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>bear_id\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      message<span class=\"token punctuation\">:</span> <span class=\"token string\">'delete is success!!!'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'something is get!!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    message<span class=\"token punctuation\">:</span> <span class=\"token string\">'hello, world!'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api'</span><span class=\"token punctuation\">,</span> router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'magic is coming'</span> <span class=\"token operator\">+</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":111,"column":1,"offset":2110},"end":{"line":205,"column":4,"offset":3930}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"总结：师傅领进门，修行看个人，看上去好像挺简单，但是也需要自己手打出来理解还深一点，特别上刚入门的同学，实践出真知啊。","position":{"start":{"line":207,"column":1,"offset":3932},"end":{"line":207,"column":60,"offset":3991}}}],"position":{"start":{"line":207,"column":1,"offset":3932},"end":{"line":207,"column":60,"offset":3991}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":207,"column":60,"offset":3991}}}},{"id":"transformer-remark-markdown-html-ast-ce80011d0010768a0d3d92a4e5b820a6-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"dva框架之数据调用","position":{"start":{"line":8,"column":4,"offset":163},"end":{"line":8,"column":14,"offset":173}}}],"position":{"start":{"line":8,"column":1,"offset":160},"end":{"line":8,"column":14,"offset":173}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"route","position":{"start":{"line":10,"column":5,"offset":179},"end":{"line":10,"column":10,"offset":184}}}],"position":{"start":{"line":10,"column":1,"offset":175},"end":{"line":10,"column":10,"offset":184}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"route负责页面渲染和数据展示","position":{"start":{"line":11,"column":1,"offset":185},"end":{"line":11,"column":17,"offset":201}}}],"position":{"start":{"line":11,"column":1,"offset":185},"end":{"line":11,"column":17,"offset":201}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//基础模板</span>\n<span class=\"token comment\">// routes/admin/index.js</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> connect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'dva'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Index</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span> hello world <span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":12,"column":1,"offset":202},"end":{"line":27,"column":4,"offset":444}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"router.js负责全部路由的管理","position":{"start":{"line":28,"column":1,"offset":445},"end":{"line":28,"column":19,"offset":463}}}],"position":{"start":{"line":28,"column":1,"offset":445},"end":{"line":28,"column":19,"offset":463}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//引入</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Router<span class=\"token punctuation\">,</span> Route<span class=\"token punctuation\">,</span> Switch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'dva/router'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> IndexPage <span class=\"token keyword\">from</span> <span class=\"token string\">'./routes/IndexPage'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Index <span class=\"token keyword\">from</span> <span class=\"token string\">'./routes/admin/Index'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">RouterConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> history <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Router history<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> exact component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>IndexPage<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/admin\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Index<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> RouterConfig<span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":29,"column":1,"offset":464},"end":{"line":47,"column":4,"offset":909}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"antd是一款ui框架，想象成bootstrap,它将常用的东西封装成组件提供使用","position":{"start":{"line":48,"column":1,"offset":910},"end":{"line":48,"column":42,"offset":951}}}],"position":{"start":{"line":48,"column":1,"offset":910},"end":{"line":48,"column":42,"offset":951}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//布局</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Layout<span class=\"token punctuation\">,</span> Menu<span class=\"token punctuation\">,</span> Icon <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'antd'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Header<span class=\"token punctuation\">,</span> Sider<span class=\"token punctuation\">,</span> Content <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Layout<span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":49,"column":1,"offset":952},"end":{"line":53,"column":4,"offset":1052}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"路由嵌套","position":{"start":{"line":55,"column":1,"offset":1054},"end":{"line":55,"column":5,"offset":1058}}}],"position":{"start":{"line":55,"column":1,"offset":1054},"end":{"line":55,"column":5,"offset":1058}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"react-route v4 规定路由不允许嵌套","position":{"start":{"line":57,"column":1,"offset":1060},"end":{"line":57,"column":25,"offset":1084}}}],"position":{"start":{"line":57,"column":1,"offset":1060},"end":{"line":57,"column":25,"offset":1084}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// V2 or V3 路由组件嵌套</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Router<span class=\"token punctuation\">,</span> Route<span class=\"token punctuation\">,</span> hashHistory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span>Router history<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>hashHistory<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'/'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>App<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'foo'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Foo<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'bar'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Bar<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n<span class=\"token comment\">// V4 Router 的路由组件嵌套</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    HashRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span>\n    Route<span class=\"token punctuation\">,</span>\n    Switch\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>App <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'/foo'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Foo<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'/bar'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Bar<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>App<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n</code></pre>\n      </div>","position":{"start":{"line":58,"column":1,"offset":1085},"end":{"line":85,"column":4,"offset":1670}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"hashHistory","position":{"start":{"line":86,"column":1,"offset":1671},"end":{"line":86,"column":12,"offset":1682}}}],"position":{"start":{"line":86,"column":1,"offset":1671},"end":{"line":86,"column":12,"offset":1682}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// 以前</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>hashHistory<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> history <span class=\"token operator\">=</span> hashHistory<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// now</span>\n<span class=\"token keyword\">import</span> createHashHistory <span class=\"token keyword\">from</span> <span class=\"token string\">'history/createBrowserHistory'</span>\n<span class=\"token keyword\">const</span> history <span class=\"token operator\">=</span> <span class=\"token function\">createHashHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//dva中修改history</span>\n<span class=\"token keyword\">import</span> browserHistory <span class=\"token keyword\">from</span> <span class=\"token string\">'history/createBrowserHistory'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 1. Initialize</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">dva</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  history<span class=\"token punctuation\">:</span> <span class=\"token function\">browserHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":87,"column":1,"offset":1683},"end":{"line":101,"column":4,"offset":2017}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"service","position":{"start":{"line":103,"column":5,"offset":2023},"end":{"line":103,"column":12,"offset":2030}}}],"position":{"start":{"line":103,"column":1,"offset":2019},"end":{"line":103,"column":12,"offset":2030}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"service负责的是数据的请求","position":{"start":{"line":104,"column":1,"offset":2031},"end":{"line":104,"column":17,"offset":2047}}}],"position":{"start":{"line":104,"column":1,"offset":2031},"end":{"line":104,"column":17,"offset":2047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"request函数是一个封装的fetch函数","position":{"start":{"line":106,"column":1,"offset":2049},"end":{"line":106,"column":23,"offset":2071}}}],"position":{"start":{"line":106,"column":1,"offset":2049},"end":{"line":106,"column":23,"offset":2071}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getrandom</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/article/random?dev=1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getoneday</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`/article/day?dev=1&amp;date=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>param<span class=\"token punctuation\">.</span>date<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":107,"column":1,"offset":2072},"end":{"line":115,"column":4,"offset":2270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"model","position":{"start":{"line":117,"column":5,"offset":2276},"end":{"line":117,"column":10,"offset":2281}}}],"position":{"start":{"line":117,"column":1,"offset":2272},"end":{"line":117,"column":10,"offset":2281}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"model层负责的是数据的处理","position":{"start":{"line":118,"column":1,"offset":2282},"end":{"line":118,"column":16,"offset":2297}}}],"position":{"start":{"line":118,"column":1,"offset":2282},"end":{"line":118,"column":16,"offset":2297}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"call是请求接口，put是进行数据存取","position":{"start":{"line":120,"column":1,"offset":2299},"end":{"line":120,"column":21,"offset":2319}}}],"position":{"start":{"line":120,"column":1,"offset":2299},"end":{"line":120,"column":21,"offset":2319}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token operator\">*</span><span class=\"token function\">getRandom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> payload <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> call<span class=\"token punctuation\">,</span> put <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">.</span>getrandom<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">yield</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">'save'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> random<span class=\"token punctuation\">:</span> data <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n       message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'random error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre>\n      </div>","position":{"start":{"line":121,"column":1,"offset":2320},"end":{"line":134,"column":4,"offset":2637}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"proxy配置","position":{"start":{"line":135,"column":5,"offset":2642},"end":{"line":135,"column":12,"offset":2649}}}],"position":{"start":{"line":135,"column":1,"offset":2638},"end":{"line":135,"column":12,"offset":2649}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"进行代理请求\n","position":{"start":{"line":136,"column":1,"offset":2650},"end":{"line":137,"column":1,"offset":2657}}},{"type":"element","tagName":"a","properties":{"href":"https://interface.meiriyiwen.com/article/day?dev=1"},"children":[{"type":"text","value":"https://interface.meiriyiwen.com/article/day?dev=1","position":{"start":{"line":137,"column":1,"offset":2657},"end":{"line":137,"column":51,"offset":2707}}}],"position":{"start":{"line":137,"column":1,"offset":2657},"end":{"line":137,"column":51,"offset":2707}}}],"position":{"start":{"line":136,"column":1,"offset":2650},"end":{"line":137,"column":51,"offset":2707}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token string\">\"proxy\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"/article\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"target\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://interface.meiriyiwen.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"changeOrigin\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre>\n      </div>","position":{"start":{"line":138,"column":1,"offset":2708},"end":{"line":145,"column":4,"offset":2842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"可能遇到的问题","position":{"start":{"line":146,"column":5,"offset":2847},"end":{"line":146,"column":12,"offset":2854}}}],"position":{"start":{"line":146,"column":1,"offset":2843},"end":{"line":146,"column":12,"offset":2854}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"嵌套路由刷新不生效","position":{"start":{"line":147,"column":3,"offset":2857},"end":{"line":147,"column":12,"offset":2866}}}],"position":{"start":{"line":147,"column":3,"offset":2857},"end":{"line":147,"column":12,"offset":2866}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// public/index.html</span>\n<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"index.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token comment\">// 改成</span>\n<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"/index.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n</code></pre>\n      </div>","position":{"start":{"line":148,"column":1,"offset":2867},"end":{"line":153,"column":4,"offset":2970}}},{"type":"text","value":"\n"}],"position":{"start":{"line":147,"column":1,"offset":2855},"end":{"line":153,"column":4,"offset":2970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"JSON格式出错，尽量不要复制，手打一遍","position":{"start":{"line":154,"column":3,"offset":2973},"end":{"line":154,"column":23,"offset":2993}}}],"position":{"start":{"line":154,"column":1,"offset":2971},"end":{"line":154,"column":23,"offset":2993}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"数据获取不到（多看请求）","position":{"start":{"line":155,"column":3,"offset":2996},"end":{"line":155,"column":15,"offset":3008}}}],"position":{"start":{"line":155,"column":3,"offset":2996},"end":{"line":155,"column":15,"offset":3008}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// 对象析构，因为这里获取的数据是{data:{..,..,..}},所以才是const { data }将其析构出来，不要被误导全都是用{ data }析构 </span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">.</span>getArticle<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":156,"column":1,"offset":3009},"end":{"line":159,"column":4,"offset":3157}}},{"type":"text","value":"\n"}],"position":{"start":{"line":155,"column":1,"offset":2994},"end":{"line":159,"column":4,"offset":3157}}},{"type":"text","value":"\n"}],"position":{"start":{"line":147,"column":1,"offset":2855},"end":{"line":159,"column":4,"offset":3157}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":159,"column":4,"offset":3157}}}},{"id":"transformer-remark-markdown-html-ast-2e666b594624deb1d8071917888116a7-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Dva中的ES6知识点","position":{"start":{"line":9,"column":4,"offset":125},"end":{"line":9,"column":15,"offset":136}}}],"position":{"start":{"line":9,"column":1,"offset":122},"end":{"line":9,"column":15,"offset":136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"const 与 let","position":{"start":{"line":11,"column":5,"offset":142},"end":{"line":11,"column":16,"offset":153}}}],"position":{"start":{"line":11,"column":1,"offset":138},"end":{"line":11,"column":16,"offset":153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"目的：创建块级作用域，let声明变量，const声明常量","position":{"start":{"line":13,"column":1,"offset":155},"end":{"line":13,"column":29,"offset":183}}}],"position":{"start":{"line":13,"column":1,"offset":155},"end":{"line":13,"column":29,"offset":183}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let与var用法类似，但是let声明的变量只在所处的代码块中有效","position":{"start":{"line":15,"column":1,"offset":185},"end":{"line":15,"column":34,"offset":218}}}],"position":{"start":{"line":15,"column":1,"offset":185},"end":{"line":15,"column":34,"offset":218}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">//报错</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span>\n</code></pre>\n      </div>","position":{"start":{"line":16,"column":1,"offset":219},"end":{"line":23,"column":4,"offset":302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"再看一道经典面试题，下面代码会输出什么？","position":{"start":{"line":24,"column":1,"offset":303},"end":{"line":24,"column":21,"offset":323}}}],"position":{"start":{"line":24,"column":1,"offset":303},"end":{"line":24,"column":21,"offset":323}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span><span class=\"token number\">1000</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":25,"column":1,"offset":324},"end":{"line":31,"column":4,"offset":438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"for循环并不会生成一个作用域，每次循环是跟随变量所在的作用域，而var声明的是全局变量，因此for每次循环中访问的i都是全局中同一个i变量","position":{"start":{"line":32,"column":1,"offset":439},"end":{"line":32,"column":71,"offset":509}}}],"position":{"start":{"line":32,"column":1,"offset":439},"end":{"line":32,"column":71,"offset":509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"闭包解决方案","position":{"start":{"line":34,"column":1,"offset":511},"end":{"line":34,"column":7,"offset":517}}}],"position":{"start":{"line":34,"column":1,"offset":511},"end":{"line":34,"column":7,"offset":517}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span><span class=\"token number\">1000</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":35,"column":1,"offset":518},"end":{"line":43,"column":4,"offset":673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let解决方案","position":{"start":{"line":45,"column":1,"offset":675},"end":{"line":45,"column":8,"offset":682}}}],"position":{"start":{"line":45,"column":1,"offset":675},"end":{"line":45,"column":8,"offset":682}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span><span class=\"token number\">1000</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":46,"column":1,"offset":683},"end":{"line":52,"column":4,"offset":797}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"使用let的时候，每次循环i都是let声明的一个新变量，每次循环都会有类似代码块包起来执行，本质上达到了立即执行函数的作用","position":{"start":{"line":53,"column":1,"offset":798},"end":{"line":53,"column":62,"offset":859}}}],"position":{"start":{"line":53,"column":1,"offset":798},"end":{"line":53,"column":62,"offset":859}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"const声明的变量，需要赋值且不可以修改，不可以重复声明。","position":{"start":{"line":55,"column":1,"offset":861},"end":{"line":55,"column":31,"offset":891}}}],"position":{"start":{"line":55,"column":1,"offset":861},"end":{"line":55,"column":31,"offset":891}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    b<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nobj<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":56,"column":1,"offset":892},"end":{"line":63,"column":4,"offset":964}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"const所谓的不可以修改值，指的是改变量的地址不会被修改。简单数据类型的值指向的就是地址，而对于对象和数组，只能保证他的内存地址指针不变。","position":{"start":{"line":64,"column":1,"offset":965},"end":{"line":64,"column":71,"offset":1035}}}],"position":{"start":{"line":64,"column":1,"offset":965},"end":{"line":64,"column":71,"offset":1035}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"模板字符串","position":{"start":{"line":66,"column":5,"offset":1041},"end":{"line":66,"column":10,"offset":1046}}}],"position":{"start":{"line":66,"column":1,"offset":1037},"end":{"line":66,"column":10,"offset":1046}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"目的：方便拼接字符串","position":{"start":{"line":67,"column":1,"offset":1047},"end":{"line":67,"column":11,"offset":1057}}}],"position":{"start":{"line":67,"column":1,"offset":1047},"end":{"line":67,"column":11,"offset":1057}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token string\">'wrold'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`hello,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>world<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":68,"column":1,"offset":1058},"end":{"line":71,"column":4,"offset":1118}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"箭头函数","position":{"start":{"line":73,"column":5,"offset":1124},"end":{"line":73,"column":9,"offset":1128}}}],"position":{"start":{"line":73,"column":1,"offset":1120},"end":{"line":73,"column":9,"offset":1128}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"目的：简化匿名函数，让this指向固定化。","position":{"start":{"line":74,"column":1,"offset":1129},"end":{"line":74,"column":22,"offset":1150}}}],"position":{"start":{"line":74,"column":1,"offset":1129},"end":{"line":74,"column":22,"offset":1150}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> v<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 等同于</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> v<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 等同于</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> v <span class=\"token operator\">=></span> v<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n</code></pre>\n      </div>","position":{"start":{"line":75,"column":1,"offset":1151},"end":{"line":85,"column":4,"offset":1270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"箭头函数本身没有this,箭头函数中的this绑定在定义时所在的作用域而是引用外层的this","position":{"start":{"line":86,"column":1,"offset":1271},"end":{"line":86,"column":47,"offset":1317}}}],"position":{"start":{"line":86,"column":1,"offset":1271},"end":{"line":86,"column":47,"offset":1317}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    f<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    f<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":87,"column":1,"offset":1318},"end":{"line":103,"column":4,"offset":1496}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"对象解构","position":{"start":{"line":105,"column":5,"offset":1502},"end":{"line":105,"column":9,"offset":1506}}}],"position":{"start":{"line":105,"column":1,"offset":1498},"end":{"line":105,"column":9,"offset":1506}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> age <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> user<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n</code></pre>\n      </div>","position":{"start":{"line":106,"column":1,"offset":1507},"end":{"line":110,"column":4,"offset":1616}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可以析构传入的函数参数","position":{"start":{"line":111,"column":1,"offset":1617},"end":{"line":111,"column":12,"offset":1628}}}],"position":{"start":{"line":111,"column":1,"offset":1617},"end":{"line":111,"column":12,"offset":1628}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token punctuation\">:</span> <span class=\"token string\">'22'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":112,"column":1,"offset":1629},"end":{"line":121,"column":4,"offset":1753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"反向解构","position":{"start":{"line":122,"column":1,"offset":1754},"end":{"line":122,"column":5,"offset":1758}}}],"position":{"start":{"line":122,"column":1,"offset":1754},"end":{"line":122,"column":5,"offset":1758}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> age <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> age <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// { name: 'xxx', age: 8 }</span>\n</code></pre>\n      </div>","position":{"start":{"line":123,"column":1,"offset":1759},"end":{"line":127,"column":4,"offset":1859}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"spread operator","position":{"start":{"line":129,"column":5,"offset":1865},"end":{"line":129,"column":20,"offset":1880}}}],"position":{"start":{"line":129,"column":1,"offset":1861},"end":{"line":129,"column":20,"offset":1880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Spread Operator 即 3 个点 …","position":{"start":{"line":130,"column":1,"offset":1881},"end":{"line":130,"column":27,"offset":1907}}}],"position":{"start":{"line":130,"column":1,"offset":1881},"end":{"line":130,"column":27,"offset":1907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"几个用法","position":{"start":{"line":132,"column":1,"offset":1909},"end":{"line":132,"column":5,"offset":1913}}}],"position":{"start":{"line":132,"column":1,"offset":1909},"end":{"line":132,"column":5,"offset":1913}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//组装函数或者对象</span>\n<span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arr<span class=\"token punctuation\">]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">:</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">:</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">...</span>obj<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":133,"column":1,"offset":1914},"end":{"line":141,"column":4,"offset":2081}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"promise","position":{"start":{"line":143,"column":5,"offset":2087},"end":{"line":143,"column":12,"offset":2094}}}],"position":{"start":{"line":143,"column":1,"offset":2083},"end":{"line":143,"column":12,"offset":2094}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"用途：优雅处理异步请求","position":{"start":{"line":144,"column":1,"offset":2095},"end":{"line":144,"column":12,"offset":2106}}}],"position":{"start":{"line":144,"column":1,"offset":2095},"end":{"line":144,"column":12,"offset":2106}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> promise <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ... some code</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token comment\">/* 异步操作成功 */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npromise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// success</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// failure</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>","position":{"start":{"line":145,"column":1,"offset":2107},"end":{"line":159,"column":4,"offset":2352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"generators","position":{"start":{"line":160,"column":5,"offset":2357},"end":{"line":160,"column":15,"offset":2367}}}],"position":{"start":{"line":160,"column":1,"offset":2353},"end":{"line":160,"column":15,"offset":2367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"用途：异步编程解决方案，用同步写异步","position":{"start":{"line":161,"column":1,"offset":2368},"end":{"line":161,"column":19,"offset":2386}}}],"position":{"start":{"line":161,"column":1,"offset":2368},"end":{"line":161,"column":19,"offset":2386}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//fetch</span>\n<span class=\"token function-variable function\">getJson</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>data <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> err <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">getJson</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/xxxxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//generator</span>\n<span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/xxxxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Oops, error: '</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":162,"column":1,"offset":2387},"end":{"line":184,"column":4,"offset":2805}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"//例子：依次读取两个文件\n//回调函数","position":{"start":{"line":185,"column":1,"offset":2806},"end":{"line":186,"column":7,"offset":2826}}}],"position":{"start":{"line":185,"column":1,"offset":2806},"end":{"line":186,"column":7,"offset":2826}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fileA<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//.....</span>\n  fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fileB<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//......</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// promies</span>\n<span class=\"token keyword\">var</span> readFile <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs-readfile-promise'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fileA<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fileB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// generators</span>\n<span class=\"token function-variable function\">getData</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>data <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">readfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> data1 <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>fileA<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//...</span>\n    <span class=\"token keyword\">let</span> data2 <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>fileB<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//.....</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>","position":{"start":{"line":187,"column":1,"offset":2827},"end":{"line":221,"column":4,"offset":3504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Set","position":{"start":{"line":222,"column":5,"offset":3509},"end":{"line":222,"column":8,"offset":3512}}}],"position":{"start":{"line":222,"column":1,"offset":3505},"end":{"line":222,"column":8,"offset":3512}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// 去重</span>\n<span class=\"token comment\">//对象自带去重</span>\n<span class=\"token comment\">//数组去重</span>\narr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            arr2<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//es6去重</span>\narr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\narr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> arr2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arr2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>","position":{"start":{"line":223,"column":1,"offset":3513},"end":{"line":243,"column":4,"offset":3878}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":243,"column":4,"offset":3878}}}},{"id":"transformer-remark-markdown-html-ddc0a6d0c07417907ca04eb9e4e090f9-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":"<h2>变量类型与变量计算</h2>\n<p>相关知识点</p>\n<ul>\n<li>typeof能判断几种类型</li>\n<li>===与==区别</li>\n<li>内存空间问题</li>\n<li>变量的存储方式</li>\n<li>关于JSON</li>\n</ul>\n<h3>typeof</h3>\n<p>typeof 只能分辨出值类型（即五种基本类型null,underfined,Boolean,Number,String），无法分辨出引用类型（Function, Array, Object等都会被识别为Object）（除了函数）。</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//Function</span>\n</code></pre>\n      </div>\n<h3>===与==</h3>\n<p>下面几种情况会发生强制类型转换</p>\n<ul>\n<li>字符串拼接  // 1+‘1’  // ‘11’</li>\n<li>==</li>\n<li>if语句 （if里面的判断会转换成true，false）</li>\n<li>\n<p>逻辑运算符\n所以当需要判断进行判断的时候尽量用全等===，除了下面这个</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// 判断对象的属性是否存在</span>\nobj<span class=\"token punctuation\">.</span>a <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token comment\">// obj.a === null || obj.a === underfined</span>\n</code></pre>\n      </div>\n<h3>内存空间问题</h3>\n<p>首先先理解三种数据结构</p>\n</li>\n<li>栈 （先进后出）  应用于执行上下文，函数调用栈</li>\n<li>堆  （按key-value的形式） 应用于js运行中的变量存储</li>\n<li>队列 （先进先出） 应用于事件循环机制</li>\n</ul>\n<h3>值类型和引用类型</h3>\n<p>像数字和字符串这类属于值类型，会单独分配地址。而像对象,数组,函数属于引用类型，使用地址进行引用。</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token comment\">// 值引用</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> a\na <span class=\"token operator\">=</span> <span class=\"token number\">200</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 100</span>\n<span class=\"token comment\">// 引用类型</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> a\na<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">21</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span> <span class=\"token comment\">//21</span>\n</code></pre>\n      </div>\n<h3>JSON</h3>\n<p>记住JSON是数据格式也是js对象</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//常用方法，可用于对象的深拷贝</span>\nJSON<span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//对象变成字符串</span>\nJSON<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{\"a\":10,\"b\":20}'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 字符串变成对象</span>\n</code></pre>\n      </div>\n<h2>原型与原型链</h2>\n<ul>\n<li>判断变量是数组类型</li>\n<li>写一个原型链继承的例子</li>\n<li>描述new一个对象的过程</li>\n<li>zepto源码中如何使用原型链</li>\n</ul>\n<h3>构造函数</h3>\n<p>var a = {} // var a = new Object()\na instanceof Array //判断变量是不是数组</p>\n<h3>原型规则</h3>\n<p>所有引用类型都有<strong>proto</strong>属性 //obj.<strong>proto</strong>\n所有的函数都有一个prototype属性 // func.prototype\n所有的引用类型的<strong>proto</strong>属性指向它的构造函数的prototype属性值 // obj.<strong>proto</strong> === Object.prototype\nfor(item in f){\nif(f.hasOwnPropety(item)){}\n}\n当试图得到一个对象的属性时，如果这个对象本身没有这个属性，那就会去它的<strong>proto</strong>中去寻找</p>\n<h3>原型链</h3>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Elem</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nElem<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">html</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> elem <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n          elem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> val\n      <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">return</span> elem<span class=\"token punctuation\">.</span>innerHTML \n      <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> div1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Elem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span>\ndiv1<span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello wrold'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>\n<h3>instanceof</h3>\n<p>前面提到无法用typeof判断一个变量是否为数组，用instanceof就可以，instanceof会根据原型链，追寻到构造函数中去，因而可以进行判断。</p>\n<h3>new的过程</h3>\n<p>简单来说就四个步骤</p>\n<ul>\n<li>创建一个新的对象 </li>\n<li>将this指向这个新的对象 // var this = {}</li>\n<li>给对象添加属性和方法 // this.fn = {}</li>\n<li>返回这个对象</li>\n</ul>"},{"id":"transformer-remark-markdown-html-118a167ba7f9a9986470ab52258a2fc5-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":"<h2>作用域与闭包</h2>\n<p>先看几个问题：</p>\n<ul>\n<li>对变量提升的理解</li>\n<li>说明this几种不同的使用场景</li>\n<li>创建10个<a>标签，点击的时候弹出对应的序号</li>\n<li>如何理解作用域</li>\n<li>实际开发中闭包的作用</li>\n</ul>\n<p>知识点：</p>\n<ul>\n<li>执行上下文</li>\n<li>作用域</li>\n<li>作用域链</li>\n<li>闭包</li>\n<li>this</li>\n</ul>\n<h3>执行上下文</h3>\n<p>首先知道js是单线程的，当一个函数调用时会创建一个执行上下文，然后推人函数调用栈，调用结束后会推出栈</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">changeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> anotherColor <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> tempColor <span class=\"token operator\">=</span> anotherColor<span class=\"token punctuation\">;</span>\n        anotherColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n        color <span class=\"token operator\">=</span> tempColor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">swapColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">changeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n<p><img src=\"https://user-images.githubusercontent.com/15880978/34150833-894ad738-e4e4-11e7-9455-e932f1680119.png\" alt=\"1\">\n当执行上下文创建的时候有两个生命周期\n<img src=\"https://user-images.githubusercontent.com/15880978/34150979-e9b9cb56-e4e4-11e7-9613-1c3e85690147.png\" alt=\"599584-391af3aad043c028\">\n而生产变量对象过程中有几个步骤，这些都是在函数执行前作用的，而已函数声明比变量声明优先，当声明变量与函数声明同名时，会被跳过不执行。\n<img src=\"https://user-images.githubusercontent.com/15880978/34151050-216a2730-e4e5-11e7-9655-70a647320b45.png\" alt=\"599584-7d131cfe82a20d37\"></p>\n<h3>作用域</h3>\n<p>作用域只是一套规则，用来管理不同子作用域的变量，例如js在es6之前没有块级作用域，使得各函数间容易污染变量。</p>\n<h3>作用域链</h3>\n<p>你可以把作用域链当做一条绳子，你可以顺着绳子访问到每个节点上的值</p>\n<h3>关于this</h3>\n<p>关于this只要记住几句话</p>\n<ul>\n<li>this要在执行时才能确认值，定义时无法确认</li>\n<li>this的指向为调用者函数的拥有者，独立调用则为underfined，非严格模式为window</li>\n</ul>\n<p>this的几种执行方法</p>\n<ul>\n<li>作为构造函数执行</li>\n<li>作为对象属性执行</li>\n<li>作为普通函数执行</li>\n<li>call,apply bind</li>\n</ul>\n<h3>闭包</h3>\n<p>所谓闭包就是在其他执行上下文中，访问到函数的内部变量，当函数被推出后，变量的引用保留而不被销毁，一般应用于模块化私有变量。</p>\n<p>闭包的形成的两个条件</p>\n<ul>\n<li>\n<p>在函数内部创建新的函数</p>\n</li>\n<li>\n<p>新的函数在执行时访问了函数的变量对象</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//闭包的应用</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> num1 <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>num1 <span class=\"token operator\">?</span> num1 <span class=\"token punctuation\">:</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> num2 <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>num2 <span class=\"token operator\">?</span> num2 <span class=\"token punctuation\">:</span> b<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nwindow<span class=\"token punctuation\">.</span>add <span class=\"token operator\">=</span> add<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n</li>\n</ul>\n<p>add(10, 20);</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-none\"><code></code></pre>\n      </div>"},{"id":"transformer-remark-markdown-html-64ffbea6144986c0dc8b9780e7193fc8-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":"<h2>异步与单线程</h2>\n<p>几个问题</p>\n<ul>\n<li>同步和异步的区别</li>\n<li>使用异步的场景</li>\n<li>获取2017-11-11的格式日期</li>\n<li>获取随机数，要求是长度一致的字符串格式</li>\n<li>\n<p>写一个能遍历对象和数组的通用foreach函数</p>\n<h3>异步</h3>\n</li>\n<li>\n<p>由于js是单线程,所以需要异步，比如Ajax,好处就是节约时间，不会阻塞</p>\n<h3>获取日期格式</h3>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">formateDate</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> year <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> month <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">var</span> day <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>month <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    month <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> month\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>day <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    day <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> date\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">return</span> year <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span> month <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> day\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> Date <span class=\"token operator\">=</span> <span class=\"token function\">formateDate</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>\n<h3>长度一致的字符串格式</h3>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">var</span> random <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> random <span class=\"token operator\">=</span> random <span class=\"token operator\">+</span> <span class=\"token string\">'0000000000'</span>\n<span class=\"token keyword\">var</span> random <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>\n<h3>foreach函数</h3>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> key\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>obj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    obj<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>\n</li>\n</ul>"},{"id":"transformer-remark-markdown-html-596c91d811ec000e05b39d01a9155944-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":"<blockquote>\n<p>前后端分离的大背景，学习node构建为前端提供json格式的数据，遵循restful api的设计风格，有利于前端工程师的进一步深入，向全栈工程师又迈出一小步。</p>\n</blockquote>\n<h3>环境</h3>\n<ul>\n<li>Node.js</li>\n<li>MongoDB</li>\n</ul>\n<p>环境安装我就不细讲了，搜索引擎都有，Window配置MongoDB是有点烦的，开发还是尽量来台mac吧.</p>\n<h3>文件目录</h3>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-none\"><code>-app  \n  -models //数据库相关\n     -bear.js\n-package.json //依赖文件\n-server.js //node服务</code></pre>\n      </div>\n<p>步骤是npm init后会生成package.json,然后安装相关依赖</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code>  <span class=\"token string\">\"dependencies\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"body-parser\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^1.18.2\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"express\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^4.16.2\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"mongoose\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^4.13.5\"</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>\n<h3>启动一个node服务</h3>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token comment\">// express为node的框架，虽然现在koa好像比较流行，但是还值得入门学一下。</span>\n<span class=\"token comment\">// body-parser可以理解为解析数据的工具</span>\n<span class=\"token comment\">// app.use(path,callback),为指定路径添加中间件，如果没有path,则默认'/'，</span>\n<span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bodyParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body-parser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>PORT <span class=\"token operator\">||</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> router <span class=\"token operator\">=</span> express<span class=\"token punctuation\">.</span><span class=\"token function\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'something is get!!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    message<span class=\"token punctuation\">:</span> <span class=\"token string\">'hello, world!'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api'</span><span class=\"token punctuation\">,</span> router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'magic is coming'</span> <span class=\"token operator\">+</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n<h3>数据库服务</h3>\n<p>bear.js</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token comment\">// new Schema生成一张表，</span>\n<span class=\"token comment\">// mongoose.model(name,Schema)给表命名</span>\n<span class=\"token keyword\">var</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> Schema <span class=\"token operator\">=</span> mongoose<span class=\"token punctuation\">.</span>Schema<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> BearSchema <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Schema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> mongoose<span class=\"token punctuation\">.</span><span class=\"token function\">model</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bear'</span><span class=\"token punctuation\">,</span> BearSchema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n<h3>api编写</h3>\n<p>server.js</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">// 引入mongo</span>\n<span class=\"token keyword\">var</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmongoose<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb://localhost/node_api'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> Bear <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./app/models/bear'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">//post请求获取数据 req.body.name</span>\n<span class=\"token comment\">//get请求获取数据 req.params.name.</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bears'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> bear <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Bear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        message<span class=\"token punctuation\">:</span> <span class=\"token string\">'bear is created!!!'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    Bear<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span>bears<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>bears<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>\n<h3>相关完整代码</h3>\n<p>server.js</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bodyParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body-parser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmongoose<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb://localhost/node_api'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> Bear <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./app/models/bear'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>PORT <span class=\"token operator\">||</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> router <span class=\"token operator\">=</span> express<span class=\"token punctuation\">.</span><span class=\"token function\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// middleware</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">,</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'something is happen!!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bears'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> bear <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Bear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        message<span class=\"token punctuation\">:</span> <span class=\"token string\">'bear is created!!!'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    Bear<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span>bears<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>bears<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bears/:bear_id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  Bear<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>bear_id<span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  Bear<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>bear_id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    bear<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n    bear<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        message<span class=\"token punctuation\">:</span> <span class=\"token string\">'Bear is update success!!!'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  Bear<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    _id<span class=\"token punctuation\">:</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>bear_id\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span>bear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      message<span class=\"token punctuation\">:</span> <span class=\"token string\">'delete is success!!!'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'something is get!!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    message<span class=\"token punctuation\">:</span> <span class=\"token string\">'hello, world!'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api'</span><span class=\"token punctuation\">,</span> router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'magic is coming'</span> <span class=\"token operator\">+</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n<p>总结：师傅领进门，修行看个人，看上去好像挺简单，但是也需要自己手打出来理解还深一点，特别上刚入门的同学，实践出真知啊。</p>"},{"id":"transformer-remark-markdown-html-ce80011d0010768a0d3d92a4e5b820a6-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":"<h2>dva框架之数据调用</h2>\n<h3>route</h3>\n<p>route负责页面渲染和数据展示</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//基础模板</span>\n<span class=\"token comment\">// routes/admin/index.js</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> connect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'dva'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Index</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span> hello world <span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n<p>router.js负责全部路由的管理</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//引入</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Router<span class=\"token punctuation\">,</span> Route<span class=\"token punctuation\">,</span> Switch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'dva/router'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> IndexPage <span class=\"token keyword\">from</span> <span class=\"token string\">'./routes/IndexPage'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Index <span class=\"token keyword\">from</span> <span class=\"token string\">'./routes/admin/Index'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">RouterConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> history <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Router history<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> exact component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>IndexPage<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/admin\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Index<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> RouterConfig<span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n<p>antd是一款ui框架，想象成bootstrap,它将常用的东西封装成组件提供使用</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//布局</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Layout<span class=\"token punctuation\">,</span> Menu<span class=\"token punctuation\">,</span> Icon <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'antd'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Header<span class=\"token punctuation\">,</span> Sider<span class=\"token punctuation\">,</span> Content <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Layout<span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n<p>路由嵌套</p>\n<p>react-route v4 规定路由不允许嵌套</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// V2 or V3 路由组件嵌套</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Router<span class=\"token punctuation\">,</span> Route<span class=\"token punctuation\">,</span> hashHistory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span>Router history<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>hashHistory<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'/'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>App<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'foo'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Foo<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'bar'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Bar<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n<span class=\"token comment\">// V4 Router 的路由组件嵌套</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    HashRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span>\n    Route<span class=\"token punctuation\">,</span>\n    Switch\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>App <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'/foo'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Foo<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">'/bar'</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Bar<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>App<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n</code></pre>\n      </div>\n<p>hashHistory</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// 以前</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>hashHistory<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> history <span class=\"token operator\">=</span> hashHistory<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// now</span>\n<span class=\"token keyword\">import</span> createHashHistory <span class=\"token keyword\">from</span> <span class=\"token string\">'history/createBrowserHistory'</span>\n<span class=\"token keyword\">const</span> history <span class=\"token operator\">=</span> <span class=\"token function\">createHashHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//dva中修改history</span>\n<span class=\"token keyword\">import</span> browserHistory <span class=\"token keyword\">from</span> <span class=\"token string\">'history/createBrowserHistory'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 1. Initialize</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">dva</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  history<span class=\"token punctuation\">:</span> <span class=\"token function\">browserHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n<h3>service</h3>\n<p>service负责的是数据的请求</p>\n<p>request函数是一个封装的fetch函数</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getrandom</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/article/random?dev=1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getoneday</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`/article/day?dev=1&amp;date=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>param<span class=\"token punctuation\">.</span>date<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>\n<h3>model</h3>\n<p>model层负责的是数据的处理</p>\n<p>call是请求接口，put是进行数据存取</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token operator\">*</span><span class=\"token function\">getRandom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> payload <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> call<span class=\"token punctuation\">,</span> put <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">.</span>getrandom<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">yield</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">'save'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> random<span class=\"token punctuation\">:</span> data <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n       message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'random error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre>\n      </div>\n<h3>proxy配置</h3>\n<p>进行代理请求\n<a href=\"https://interface.meiriyiwen.com/article/day?dev=1\">https://interface.meiriyiwen.com/article/day?dev=1</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token string\">\"proxy\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"/article\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"target\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://interface.meiriyiwen.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"changeOrigin\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre>\n      </div>\n<h3>可能遇到的问题</h3>\n<ul>\n<li>\n<p>嵌套路由刷新不生效</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// public/index.html</span>\n<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"index.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token comment\">// 改成</span>\n<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"/index.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n</code></pre>\n      </div>\n</li>\n<li>JSON格式出错，尽量不要复制，手打一遍</li>\n<li>\n<p>数据获取不到（多看请求）</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// 对象析构，因为这里获取的数据是{data:{..,..,..}},所以才是const { data }将其析构出来，不要被误导全都是用{ data }析构 </span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">.</span>getArticle<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>\n</li>\n</ul>"},{"id":"transformer-remark-markdown-html-2e666b594624deb1d8071917888116a7-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":"<h2>Dva中的ES6知识点</h2>\n<h3>const 与 let</h3>\n<p>目的：创建块级作用域，let声明变量，const声明常量</p>\n<p>let与var用法类似，但是let声明的变量只在所处的代码块中有效</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">//报错</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span>\n</code></pre>\n      </div>\n<p>再看一道经典面试题，下面代码会输出什么？</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span><span class=\"token number\">1000</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>\n<p>for循环并不会生成一个作用域，每次循环是跟随变量所在的作用域，而var声明的是全局变量，因此for每次循环中访问的i都是全局中同一个i变量</p>\n<p>闭包解决方案</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span><span class=\"token number\">1000</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>\n<p>let解决方案</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span><span class=\"token number\">1000</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>\n<p>使用let的时候，每次循环i都是let声明的一个新变量，每次循环都会有类似代码块包起来执行，本质上达到了立即执行函数的作用</p>\n<p>const声明的变量，需要赋值且不可以修改，不可以重复声明。</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    b<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nobj<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>\n<p>const所谓的不可以修改值，指的是改变量的地址不会被修改。简单数据类型的值指向的就是地址，而对于对象和数组，只能保证他的内存地址指针不变。</p>\n<h3>模板字符串</h3>\n<p>目的：方便拼接字符串</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token string\">'wrold'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`hello,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>world<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>\n<h3>箭头函数</h3>\n<p>目的：简化匿名函数，让this指向固定化。</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> v<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 等同于</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> v<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 等同于</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> v <span class=\"token operator\">=></span> v<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n</code></pre>\n      </div>\n<p>箭头函数本身没有this,箭头函数中的this绑定在定义时所在的作用域而是引用外层的this</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    f<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    f<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>\n<h3>对象解构</h3>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> age <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> user<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n</code></pre>\n      </div>\n<p>可以析构传入的函数参数</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token punctuation\">:</span> <span class=\"token string\">'22'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>\n<p>反向解构</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> age <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> age <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// { name: 'xxx', age: 8 }</span>\n</code></pre>\n      </div>\n<h3>spread operator</h3>\n<p>Spread Operator 即 3 个点 …</p>\n<p>几个用法</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//组装函数或者对象</span>\n<span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arr<span class=\"token punctuation\">]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">:</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">:</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">...</span>obj<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>\n<h3>promise</h3>\n<p>用途：优雅处理异步请求</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token keyword\">const</span> promise <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ... some code</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token comment\">/* 异步操作成功 */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npromise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// success</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// failure</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n<h3>generators</h3>\n<p>用途：异步编程解决方案，用同步写异步</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">//fetch</span>\n<span class=\"token function-variable function\">getJson</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>data <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> err <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">getJson</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/xxxxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//generator</span>\n<span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/xxxxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Oops, error: '</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>\n<p>//例子：依次读取两个文件\n//回调函数</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fileA<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//.....</span>\n  fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fileB<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//......</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// promies</span>\n<span class=\"token keyword\">var</span> readFile <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs-readfile-promise'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fileA<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fileB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// generators</span>\n<span class=\"token function-variable function\">getData</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>data <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">readfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> data1 <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>fileA<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//...</span>\n    <span class=\"token keyword\">let</span> data2 <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>fileB<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//.....</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>\n<h3>Set</h3>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code><span class=\"token comment\">// 去重</span>\n<span class=\"token comment\">//对象自带去重</span>\n<span class=\"token comment\">//数组去重</span>\narr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            arr2<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//es6去重</span>\narr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\narr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> arr2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arr2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span>\n</code></pre>\n      </div>"},{"id":"transformer-remark-markdown-ast-926e139329ce141a762dab36b1c33775-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":{"type":"root","children":[{"type":"yaml","value":"title: JS基础查缺补漏--变量类型与原型链\nsubTitle: 正所谓，欲穷千里目，先打好地基...\ndate: \"2017-11-11\"\npath: \"/know-js-1/\"\ncover: knowjs.png","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":7,"column":4,"offset":119},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"最近在做h5的性能优化，方案是想通过大数据打点了解真实用户情况，我们也是通过performance.timing来获取页面性能数据，可以很方便知道页面load完的时间，但是我们更想知道页面首屏时间。\\r\\n\\r\\n目前我们大部分页面和天猫类似，采用前端异步渲染，同时为了性能优化，部分页面开始尝试做node端渲染直出。\\r\\n\\r\\n目前我们这边有个想法，前端异步当模板生成的dom插入body时候，我们通过performance.now()来打点一个数据，获取首屏渲染时间，node端渲染的时候，底部 标记为async的js执行就通过performance.now()打一个点，不知道这种方式是否准确？\\r\\n\\r\\n最后想了解下天猫团队是通过什么样的方式来比较准确获取页面的首屏时间，而不是页面load完的时间？\\r\\n","position":{"start":{"line":9,"column":1,"offset":121},"end":{"line":9,"column":363,"offset":483},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":121},"end":{"line":9,"column":363,"offset":483},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":9,"column":363,"offset":483}}}},{"id":"transformer-remark-markdown-html-ast-926e139329ce141a762dab36b1c33775-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"最近在做h5的性能优化，方案是想通过大数据打点了解真实用户情况，我们也是通过performance.timing来获取页面性能数据，可以很方便知道页面load完的时间，但是我们更想知道页面首屏时间。\\r\\n\\r\\n目前我们大部分页面和天猫类似，采用前端异步渲染，同时为了性能优化，部分页面开始尝试做node端渲染直出。\\r\\n\\r\\n目前我们这边有个想法，前端异步当模板生成的dom插入body时候，我们通过performance.now()来打点一个数据，获取首屏渲染时间，node端渲染的时候，底部 标记为async的js执行就通过performance.now()打一个点，不知道这种方式是否准确？\\r\\n\\r\\n最后想了解下天猫团队是通过什么样的方式来比较准确获取页面的首屏时间，而不是页面load完的时间？\\r\\n","position":{"start":{"line":9,"column":1,"offset":121},"end":{"line":9,"column":363,"offset":483}}}],"position":{"start":{"line":9,"column":1,"offset":121},"end":{"line":9,"column":363,"offset":483}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":9,"column":363,"offset":483}}}},{"id":"transformer-remark-markdown-html-926e139329ce141a762dab36b1c33775-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants","value":"<p>最近在做h5的性能优化，方案是想通过大数据打点了解真实用户情况，我们也是通过performance.timing来获取页面性能数据，可以很方便知道页面load完的时间，但是我们更想知道页面首屏时间。\\r\\n\\r\\n目前我们大部分页面和天猫类似，采用前端异步渲染，同时为了性能优化，部分页面开始尝试做node端渲染直出。\\r\\n\\r\\n目前我们这边有个想法，前端异步当模板生成的dom插入body时候，我们通过performance.now()来打点一个数据，获取首屏渲染时间，node端渲染的时候，底部 标记为async的js执行就通过performance.now()打一个点，不知道这种方式是否准确？\\r\\n\\r\\n最后想了解下天猫团队是通过什么样的方式来比较准确获取页面的首屏时间，而不是页面load完的时间？\\r\\n</p>"}]}